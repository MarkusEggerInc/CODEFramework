<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:CODE.Framework.Wpf.Controls;assembly=CODE.Framework.Wpf"
                    xmlns:classes="clr-namespace:CODE.Framework.Wpf.Theme.Wildcat.Classes"
                    xmlns:mvvm="clr-namespace:CODE.Framework.Wpf.Mvvm;assembly=CODE.Framework.Wpf.Mvvm">

    <Style TargetType="Button" x:Key="Wildcat-Control-Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="{DynamicResource CODE.Framework-Application-ForegroundBrush1}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize-Large}"/>
        <Setter Property="Template" Value="{DynamicResource Wildcat-Button-Template}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
        <Style.Triggers>
            <Trigger Property="IsCancel" Value="True">
                <Setter Property="Background" Value="#4C0506"/>
                <Setter Property="BorderBrush" Value="#37212E"/>
            </Trigger>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="Background" Value="#2A3D16"/>
                <Setter Property="BorderBrush" Value="#223112"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate TargetType="ButtonBase" x:Key="Wildcat-Button-Template">
        <Grid controls:GridEx.RowHeights="*,*">
            <Border x:Name="Chrome" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Grid.RowSpan="2"/>
            <Border Margin="2,1,2,0" CornerRadius="2" x:Name="Chrome2">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#81FFFFFF"/>
                        <GradientStop Color="#4CFFFFFF"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Border x:Name="highlight" CornerRadius="3" BorderThickness="0" BorderBrush="{x:Null}" Background="#27FFFFFF" SnapsToDevicePixels="True" Grid.RowSpan="2" Visibility="Collapsed"/>
            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                              ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              Margin="15,2" RecognizesAccessKey="True" x:Name="content" Grid.RowSpan="2"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            <Rectangle Grid.RowSpan="2" Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Visibility="Collapsed" x:Name="VisualRectangle"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Visibility" TargetName="highlight" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#FFADADAD"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Margin" TargetName="content" Value="16,3,14,1"/>
            </Trigger>
            <Trigger Property="IsMouseCaptureWithin" Value="True">
                <Setter Property="Visibility" Value="Visible" TargetName="VisualRectangle"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Visibility" Value="Visible" TargetName="VisualRectangle"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Visibility" Value="Visible" TargetName="VisualRectangle"/>
            </Trigger>
            <Trigger Property="classes:WildcatButton.Position" Value="First">
                <Setter TargetName="Chrome" Property="CornerRadius" Value="3,0,0,3"/>
                <Setter TargetName="Chrome2" Property="CornerRadius" Value="2,0,0,2"/>
                <Setter TargetName="Chrome2" Property="Margin" Value="2,1,0,0"/>
                <Setter TargetName="highlight" Property="CornerRadius" Value="3,0,0,3"/>
            </Trigger>
            <Trigger Property="classes:WildcatButton.Position" Value="Middle">
                <Setter TargetName="Chrome" Property="CornerRadius" Value="0"/>
                <Setter TargetName="Chrome2" Property="CornerRadius" Value="0"/>
                <Setter TargetName="Chrome2" Property="Margin" Value="0,1,0,0"/>
                <Setter TargetName="highlight" Property="CornerRadius" Value="0"/>
            </Trigger>
            <Trigger Property="classes:WildcatButton.Position" Value="Last">
                <Setter TargetName="Chrome" Property="CornerRadius" Value="0,3,3,0"/>
                <Setter TargetName="Chrome2" Property="CornerRadius" Value="0,2,2,0"/>
                <Setter TargetName="Chrome2" Property="Margin" Value="0,1,2,0"/>
                <Setter TargetName="highlight" Property="CornerRadius" Value="0,3,3,0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource Wildcat-Control-Button}" />
    <Style TargetType="{x:Type mvvm:ViewActionMenuButton}" BasedOn="{StaticResource Wildcat-Control-Button}" />

</ResourceDictionary>
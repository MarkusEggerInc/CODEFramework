<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:CODE.Framework.Wpf.Controls;assembly=CODE.Framework.Wpf"
                    xmlns:mvvm="clr-namespace:CODE.Framework.Wpf.Mvvm;assembly=CODE.Framework.Wpf.Mvvm"
                    xmlns:classes="clr-namespace:CODE.Framework.Wpf.Theme.Workplace.Classes"
                    xmlns:controls1="clr-namespace:CODE.Framework.Wpf.Theme.Workplace.Controls">

    <Style TargetType="mvvm:Shell" x:Key="CODE.Framework.Wpf.Mvvm.Shell-Style">
        <Setter Property="Background" Value="{DynamicResource CODE.Framework-Application-BackgroundBrush1}" />
        <Setter Property="controls:WindowEx.IsBorderless" Value="True" />
        <Setter Property="controls:WindowEx.DynamicIcon" Value="/Images/Application.png" />
        <Setter Property="controls:WindowEx.HeaderHeight" Value="26" />
        <Setter Property="controls:WindowEx.AutoWindowDragEnabled" Value="True" />
        <Setter Property="controls:WindowEx.AutoWindowMaximizeEnabled" Value="True" />
        <Setter Property="controls:WindowEx.AutoWindowResizingEnabled" Value="True"/>
        <Setter Property="MaximumTopLevelViewCount" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="mvvm:Shell">
                    <Grid Background="{TemplateBinding Background}" controls:GridEx.RowHeights="30,Auto,Auto,*,23">
                        <Border BorderBrush="{DynamicResource CODE.Framework-Application-ThemeBrush1}" BorderThickness="1" Grid.RowSpan="5" Panel.ZIndex="10001" />
                        <Grid controls:GridEx.ColumnWidths="Auto,*,Auto" HorizontalAlignment="Stretch">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{TemplateBinding Icon}" Stretch="Uniform" Height="22" Width="22" Margin="8,4"/>
                                <mvvm:ViewActionStackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Stretch"
                                                           Model="{Binding}"
                                                           SelectedView="{Binding Path=SelectedItem, ElementName=OpenViews, Mode=OneWay}" />
                            </StackPanel>
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" TextAlignment="Center" 
                                       x:Name="windowTitle" Text="{TemplateBinding Title}" Grid.Column="1" Margin="20,5"
                                       FontFamily="{DynamicResource DefaultFont}" FontSize="{DynamicResource FontSize-Normal}"
                                       Foreground="{DynamicResource CODE.Framework-Application-ForegroundBrush1}"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Height="22" Margin="0,3,1,0" Grid.Column="2">
                                <controls:MinimizeButton/>
                                <controls:ToggleMaximizeButton/>
                                <controls:CloseButton/>
                            </StackPanel>
                        </Grid>
                        <mvvm:ViewActionRibbon x:Name="ribbon" Grid.Row="1" HorizontalAlignment="Stretch" Model="{Binding}"
                                               SelectedView="{Binding Path=SelectedItem, ElementName=OpenViews, Mode=OneWay}" />
                        <ItemsControl VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0" x:Name="notifications" Grid.Row="2"
                                      ItemsSource="{TemplateBinding CurrentNotifications}" 
                                      Background="#FBF6B5" BorderBrush="#32000000" BorderThickness="0,0,0,1">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ContentControl Content="{Binding View}" Margin="1" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <mvvm:ViewHostTabControl x:Name="OpenViews" Grid.Row="3" Margin="0"
                                                 ItemsSource="{TemplateBinding NormalViews}"
                                                 SelectedIndex="{Binding SelectedNormalView, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                 ContentZoom="{Binding ElementName=zoomSlider, Path=Zoom}"
                                                 Style="{DynamicResource CODE.Framework.Wpf.Mvvm.Shell-NormalViewsHost}"/>
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Row="4" x:Name="statusGrid"
                              Background="{DynamicResource CODE.Framework-Workplace-StatusReadyBackgroundBrush}" >
                            <ContentControl Content="{TemplateBinding CurrentStatusView}" x:Name="statusContent"
                                            FontFamily="{DynamicResource DefaultFont}" FontSize="{DynamicResource FontSize-Normal}"
                                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                            VerticalContentAlignment="Center" Margin="8,2,188,0"
                                            Foreground="{DynamicResource CODE.Framework-Workplace-StatusReadyForegroundBrush}"/>
                            <controls:ZoomSlider x:Name="zoomSlider" Minimum=".25" Maximum="3" MaximumZoom="3" MinimumZoom=".25"
                                                 VerticalAlignment="Center" HorizontalAlignment="Right" Width="170" Margin="0,0,15,0" 
                                                 Style="{DynamicResource CODE.Framework.Wpf.Mvvm.ZoomSlider}"/>
                        </Grid>
                        <Grid Grid.RowSpan="5" controls:GridEx.ColumnWidths="Auto,*" Visibility="Collapsed" x:Name="fileButtonOverlay">
                            <Rectangle Fill="{DynamicResource CODE.Framework-Application-BackgroundBrush1}" Margin="1,58,1,1" Grid.ColumnSpan="2" Visibility="Hidden" x:Name="fileOverlayUI" />
                            <Grid x:Name="fileOverlayMenu">
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Rectangle Fill="{DynamicResource CODE.Framework-Application-ThemeBrush1}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                <mvvm:CloseSpecialRibbonUiButton Ribbon="{Binding ElementName=ribbon}" Margin="24,20,0,0" Height="36" Width="36" 
                                                                 VerticalAlignment="Top" HorizontalAlignment="Left"/>
                                <ScrollViewer VerticalAlignment="Stretch" HorizontalAlignment="Stretch" MinWidth="125" MaxWidth="400" Margin="0,70,0,0"
                                              VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                    <mvvm:SpecialFirstPageActionList Model="{Binding}" SelectedView="{Binding Path=SelectedItem, ElementName=OpenViews, Mode=OneWay}"/>
                                </ScrollViewer>
                            </Grid>
                            <Grid Grid.Column="1" controls:GridEx.RowHeights="Auto,*">
                                <ItemsControl VerticalAlignment="Top" 
                                          HorizontalAlignment="Stretch" 
                                          Margin="0,26,0,0" 
                                          ItemsSource="{TemplateBinding CurrentNotifications}" 
                                          Background="#FBF6B5" 
                                          BorderBrush="#32000000" BorderThickness="0,0,0,1">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <ContentControl Content="{Binding View}" Margin="1" VerticalAlignment="Top" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <TabControl x:Name="topLevelViews" 
                                            ItemsSource="{TemplateBinding TopLevelViews}" 
                                            Grid.Row="1"
                                            Visibility="Hidden"
                                            SelectedIndex="{TemplateBinding SelectedTopLevelView}" 
                                            Margin="20,20,0,0"
                                            Style="{DynamicResource CODE.Framework.Wpf.Mvvm.Shell-TopLevelViewsHost}" />
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ShowFileMenuOverlay">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="fileButtonOverlay">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="fileOverlayMenu">
                                <EasingDoubleKeyFrame KeyTime="0" Value="-75"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="fileOverlayUI">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fileOverlayUI">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="topLevelViews">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HideFileMenuOverlay">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="fileButtonOverlay">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="fileOverlayMenu">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.07" Value="-75"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="fileOverlayUI">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.15" Value="{x:Static Visibility.Hidden}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fileOverlayUI">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="topLevelViews">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="mvvm:ViewActionRibbon.SpecialFirstPageActivate" SourceName="ribbon">
                            <BeginStoryboard Storyboard="{StaticResource ShowFileMenuOverlay}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="mvvm:ViewActionRibbon.SpecialFirstPageDeactivate" SourceName="ribbon">
                            <BeginStoryboard Storyboard="{StaticResource HideFileMenuOverlay}"/>
                        </EventTrigger>
                        <Trigger Property="IsSpecialFirstPageActive" SourceName="ribbon" Value="True">
                            <Setter Property="Visibility" TargetName="notifications" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="statusGrid" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="OpenViews" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="topLevelViews" Value="Visible"/>
                            <Setter Property="TopLevelViewLaunchMode" Value="InPlaceExceptPopups" />
                        </Trigger>
                        <Trigger Property="CurrentNotificationsCount" Value="0">
                            <Setter Property="Visibility" TargetName="notifications" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsActive" Value="False">
                            <Setter Property="Opacity" TargetName="windowTitle" Value=".66" />
                        </Trigger>
                        <Trigger Property="CurrentApplicationStatus" Value="Processing">
                            <Setter Property="Background" TargetName="statusGrid" Value="{DynamicResource CODE.Framework-Workplace-StatusProcessingBackgroundBrush}"/>
                            <Setter Property="Foreground" TargetName="statusContent" Value="{DynamicResource CODE.Framework-Workplace-StatusProcessingForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="CurrentApplicationStatus" Value="Warning">
                            <Setter Property="Background" TargetName="statusGrid" Value="{DynamicResource CODE.Framework-Workplace-StatusWarningBackgroundBrush}"/>
                            <Setter Property="Foreground" TargetName="statusContent" Value="{DynamicResource CODE.Framework-Workplace-StatusWarningForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="CurrentApplicationStatus" Value="Error">
                            <Setter Property="Background" TargetName="statusGrid" Value="{DynamicResource CODE.Framework-Workplace-StatusErrorBackgroundBrush}"/>
                            <Setter Property="Foreground" TargetName="statusContent" Value="{DynamicResource CODE.Framework-Workplace-StatusErrorForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Window" x:Key="CODE.Framework.Wpf.Mvvm.Shell-TopLevelMessageBoxWindowStyle">
        <Setter Property="Background" Value="{DynamicResource CODE.Framework-Application-BackgroundBrush1}" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="controls:WindowEx.AutoWindowDragEnabled" Value="True" />
        <Setter Property="ShowInTaskbar" Value="True" />
        <Setter Property="SizeToContent"  Value="WidthAndHeight" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid controls:GridEx.RowHeights="Auto,*,Auto" MinWidth="250" Background="{TemplateBinding Background}" MaxWidth="1000" MaxHeight="700">
                        <Border Grid.RowSpan="3" BorderThickness="1,3,1,1" BorderBrush="{DynamicResource CODE.Framework-Application-ThemeBrush1}" />
                        <Grid controls:GridEx.ColumnWidths="Auto,*,Auto">
                            <Label FontFamily="{DynamicResource DefaultFont}"
                                   FontWeight="Light"
                                   FontSize="{DynamicResource FontSize-Largest}"
                                   Foreground="{DynamicResource CODE.Framework-Application-ThemeBrush1}"
                                   Content="{TemplateBinding Title}"
                                   Margin="5" Grid.Column="1"/>
                        </Grid>
                        <AdornerDecorator Grid.Row="1">
                            <ContentPresenter Margin="20,10" />
                        </AdornerDecorator>
                        <Rectangle Grid.Row="2" Margin="1,0,1,1" Fill="{DynamicResource CODE.Framework-Application-BackgroundBrush2}"/>
                        <mvvm:ActionGrid Grid.Row="2" Model="{Binding}" Margin="20,15,20,15">
                            <ItemsControl ItemsSource="{Binding Actions}" HorizontalAlignment="Right" Focusable="False">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button FontSize="{DynamicResource FontSize-Normal}" 
                                                Content="{Binding Caption}" Command="{Binding}" 
                                                IsDefault="{Binding IsDefault, Mode=OneWay}" IsCancel="{Binding IsCancel, Mode=OneWay}"
                                                Margin="5,0,0,0" Padding="7,3" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </mvvm:ActionGrid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Window" x:Key="CODE.Framework.Wpf.Mvvm.Shell-TopLevelWindowStyle">
        <Setter Property="Background" Value="{DynamicResource CODE.Framework-Application-BackgroundBrush1}" />
        <Setter Property="ShowInTaskbar" Value="True" />
        <Setter Property="controls:WindowEx.IsBorderless" Value="True" />
        <Setter Property="controls:WindowEx.AutoWindowDragEnabled" Value="True" />
        <Setter Property="controls:WindowEx.AutoWindowMaximizeEnabled" Value="True" />
        <Setter Property="controls:WindowEx.AutoWindowResizingEnabled" Value="True"/>
        <Setter Property="Template" Value="{DynamicResource Workplace-TopLevelWindow-Template}" />
    </Style>

    <Style TargetType="mvvm:ViewHostTabControl" x:Key="CODE.Framework.Wpf.Mvvm.Shell-NormalViewsHost" >
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <AdornerDecorator>
                            <ContentControl Content="{Binding View}" Margin="1">
                                <ContentControl.LayoutTransform>
                                    <ScaleTransform ScaleX="{Binding Path=ContentZoom, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mvvm:ViewHostTabControl}}}"
                                                    ScaleY="{Binding Path=ContentZoom, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mvvm:ViewHostTabControl}}}"/>
                                </ContentControl.LayoutTransform>
                            </ContentControl>
                        </AdornerDecorator>
                        <mvvm:ModelStatusGrid Model="{Binding Model}" VerticalAlignment="Top" HorizontalAlignment="Stretch" Height="8" x:Name="modelStatus">
                            <mvvm:ModelStatusGrid.Resources>
                                <mvvm:ModelStatusToVisibleConverter x:Key="ModelStatusToVisibleConverter" />
                            </mvvm:ModelStatusGrid.Resources>
                            <controls1:LinearProgressAnimation IsActive="True" DotDiameter="5" DotBrush="{DynamicResource CODE.Framework-Workplace-ThemeBrush1}" DotAnimationSpeedFactor=".9" DotSpaceFactor=".8"
                                                               Visibility="{Binding Path=ModelStatus, ElementName=modelStatus, Converter={StaticResource ModelStatusToVisibleConverter}}"/>
                        </mvvm:ModelStatusGrid>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource CODE.Framework.Wpf.Mvvm.Shell-ViewHost}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="mvvm:ViewHostTabControl">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local" controls:GridEx.RowHeights="*,Auto" x:Name="rootGrid">
                        <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="0" SnapsToDevicePixels="True"/>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1" Background="{x:Null}" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" Opacity=".66" x:Name="border1" />
                        <Border Grid.Row="2" Background="{DynamicResource CODE.Framework-Application-ForegroundBrush3}" x:Name="border2"/>
                        <ScrollViewer Grid.Row="1" Style="{DynamicResource ViewHostTabItemHeaderScroll}" ClipToBounds="False" SnapsToDevicePixels="True" x:Name="scroll"
                                      VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Hidden">
                            <TabPanel IsItemsHost="true" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" Margin="0,0,2,0" ClipToBounds="False"/>
                        </ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowHeaders" Value="False">
                            <Setter Property="controls:GridEx.RowHeights" Value="*,0" TargetName="rootGrid" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="HasItems" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TabItem" x:Key="CODE.Framework.Wpf.Mvvm.Shell-ViewHost">
        <Setter Property="Header" Value="{Binding ViewTitle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid x:Name="grid" SnapsToDevicePixels="True" Margin="0" ClipToBounds="False">
                        <Border x:Name="unselectedBorder" BorderThickness="1,0,1,0" Margin="1,4,-2,2" VerticalAlignment="Stretch" BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush1}" Opacity=".6"/>
                        <Border x:Name="selectedBorder3" Background="{DynamicResource CODE.Framework-Application-BackgroundBrush1}" Margin="0,-2,-2,0" BorderThickness="0" VerticalAlignment="Stretch" Visibility="Hidden"/>
                        <Border x:Name="selectedBorder" BorderThickness="1,0,1,0" VerticalAlignment="Stretch" Margin="0,1,-2,0" BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush1}" Visibility="Hidden" Opacity=".66"/>
                        <Border x:Name="selectedBorder2" BorderThickness="0,0,0,2" VerticalAlignment="Stretch" Margin="0,1,-2,0" BorderBrush="{DynamicResource CODE.Framework-Application-ThemeBrush1}" Visibility="Hidden"/>
                        <Label Content="{Binding ViewTitle}" FontSize="{DynamicResource FontSize-Normal}" x:Name="Content" Margin="6,0,5,0" 
                               HorizontalAlignment="Center" VerticalAlignment="Top" 
                               Foreground="{DynamicResource CODE.Framework-Application-ForegroundBrush1}"/>
                        <Label Content="{Binding ViewTitle}" FontSize="{DynamicResource FontSize-Normal}" x:Name="Content2" Margin="6,0,5,0" 
                               HorizontalAlignment="Center" VerticalAlignment="Top" FontWeight="Bold" Visibility="Hidden"
                               Foreground="{DynamicResource CODE.Framework-Application-ThemeBrush1}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="FontWeight" TargetName="Content" Value="Bold" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Visibility" TargetName="Content" Value="Hidden" />
                            <Setter Property="Visibility" TargetName="Content2" Value="Visible" />
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Visibility" TargetName="selectedBorder" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="selectedBorder2" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="selectedBorder3" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="unselectedBorder" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TabControl" x:Key="CODE.Framework.Wpf.Mvvm.Shell-TopLevelViewsHost">
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="False" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid ClipToBounds="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel Height="0" x:Name="HeaderPanel" IsItemsHost="True" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" Margin="0,-20,0,0"/>
                            <Border x:Name="ContentPanel" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    KeyboardNavigation.DirectionalNavigation="Contained" 
                                    Background="{x:Null}"
                                    KeyboardNavigation.TabIndex="2" 
                                    KeyboardNavigation.TabNavigation="Local"
                                    Grid.Row="1" 
                                    >
                                <ContentPresenter x:Name="PART_SelectedContentHost" 
                                                  ContentTemplate="{TemplateBinding SelectedContentTemplate}" 
                                                  Content="{TemplateBinding SelectedContent}" 
                                                  ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" 
                                                  ContentSource="SelectedContent" 
                                                  Margin="{TemplateBinding Padding}" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <mvvm:SizeStrategyAwareGrid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ClipToBounds="True"
                                                controls:GridEx.RowHeights="Auto,*,Auto">
                        <mvvm:ViewResultHeaderGrid x:Name="headerGrid" ViewResult="{Binding}" Margin="5">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                <!--<Rectangle Height="48" Width="48" Fill="{Binding Path=TitleIconBrush, ElementName=headerGrid}" />-->
                                <Label FontFamily="{DynamicResource DefaultFont}"
                                       FontWeight="Light"
                                       FontSize="{DynamicResource FontSize-VeryLarge}"
                                       Foreground="{DynamicResource CODE.Framework-Application-ThemeBrush1}"
                                       Content="{Binding Path=ViewTitle, ElementName=headerGrid}"
                                       Margin="5"/>
                            </StackPanel>
                        </mvvm:ViewResultHeaderGrid>
                        <AdornerDecorator Grid.Row="1" x:Name="MainContentArea">
                            <ContentControl Content="{Binding View}" />
                        </AdornerDecorator>
                        <mvvm:ModelStatusGrid Model="{Binding Model}" VerticalAlignment="Top" HorizontalAlignment="Stretch" Height="8" x:Name="modelStatus" Grid.Row="1">
                            <mvvm:ModelStatusGrid.Resources>
                                <mvvm:ModelStatusToVisibleConverter x:Key="ModelStatusToVisibleConverter" />
                            </mvvm:ModelStatusGrid.Resources>
                            <controls1:LinearProgressAnimation IsActive="True" DotDiameter="5" DotBrush="{DynamicResource CODE.Framework-Workplace-ThemeBrush1}" DotAnimationSpeedFactor=".9" DotSpaceFactor=".8"
                                                               Visibility="{Binding Path=ModelStatus, ElementName=modelStatus, Converter={StaticResource ModelStatusToVisibleConverter}}"/>
                        </mvvm:ModelStatusGrid>
                        <mvvm:ActionGrid Grid.Row="2" Model="{Binding Model}" Margin="20,15,20,15">
                            <ItemsControl ItemsSource="{Binding Model.Actions}" HorizontalAlignment="Right">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button FontSize="{DynamicResource FontSize-Normal}" 
                                                Content="{Binding Caption}" Command="{Binding}" 
                                                IsDefault="{Binding IsDefault, Mode=OneWay}" IsCancel="{Binding IsCancel, Mode=OneWay}"
                                                Margin="5,0,0,0" Padding="7,3" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </mvvm:ActionGrid>
                    </mvvm:SizeStrategyAwareGrid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:CloseButton">
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="1,0,0,0"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:CloseButton">
                    <Grid>
                        <Rectangle x:Name="bg" Fill="Transparent" IsHitTestVisible="True" />
                        <Border Width="12" Height="2" BorderThickness="1" RenderTransformOrigin=".5,.5"
                                                        VerticalAlignment="Center" HorizontalAlignment="Center"
                                                        BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush1}">
                            <Border.RenderTransform>
                                <RotateTransform Angle="45" />
                            </Border.RenderTransform>
                        </Border>
                        <Border Width="12" Height="2" BorderThickness="1" RenderTransformOrigin=".5,.5"
                                                        VerticalAlignment="Center" HorizontalAlignment="Center"
                                                        BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush1}">
                            <Border.RenderTransform>
                                <RotateTransform Angle="-45" />
                            </Border.RenderTransform>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" Value="{DynamicResource CODE.Framework-Application-HighlightBrush1}" TargetName="bg" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:ToggleMaximizeButton">
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="1,0,0,0"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ToggleMaximizeButton">
                    <Grid>
                        <Rectangle x:Name="bg" Fill="Transparent" IsHitTestVisible="True" />
                        <Border Width="10" Height="10" BorderThickness="1,3,1,1" x:Name="norm"
                                VerticalAlignment="Center" HorizontalAlignment="Center" Background="White"
                                BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush1}" />
                        <Border Width="8" Height="8" BorderThickness="1,2,1,1" Margin="4,0,0,4" x:Name="max2"
                                VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed"
                                Background="White"
                                BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush1}" />
                        <Border Width="8" Height="8" BorderThickness="1,2,1,1" Margin="0,2,2,0" x:Name="max1"
                                VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed"
                                Background="White"
                                BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush1}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" Value="{DynamicResource CODE.Framework-Application-HighlightBrush1}" TargetName="bg" />
                        </Trigger>
                        <Trigger Property="IsMaximized" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="norm"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="max1"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="max2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:MinimizeButton">
        <Setter Property="Width" Value="28"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="1,0,0,0"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:MinimizeButton">
                    <Grid>
                        <Rectangle x:Name="bg" Fill="Transparent" IsHitTestVisible="True" />
                        <Border Width="10" Height="8" BorderThickness="0,0,0,2"
                                VerticalAlignment="Center" HorizontalAlignment="Center"
                                BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush1}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" Value="{DynamicResource CODE.Framework-Application-HighlightBrush1}" TargetName="bg" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="mvvm:ViewActionStackPanelButton">
        <Setter Property="Height" Value="22"/>
        <Setter Property="Width" Value="22" />
        <Setter Property="Margin" Value="2,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="mvvm:ViewActionStackPanelButton">
                    <Grid>
                        <Rectangle x:Name="bg" Fill="Transparent" IsHitTestVisible="True" />
                        <ContentPresenter Margin="2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" Value="{DynamicResource CODE.Framework-Application-HighlightBrush1}" TargetName="bg" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ScrollViewer" x:Key="ViewHostTabItemHeaderScroll">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="Panel.ZIndex" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid SnapsToDevicePixels="True" controls:GridEx.ColumnWidths="Auto,*,Auto" ClipToBounds="False">
                        <StackPanel Orientation="Horizontal" Margin="5,0,0,0">
                            <classes:ScrollLeftButton Width="40" Height="20" ScrollViewer="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                <RepeatButton.Template>
                                    <ControlTemplate TargetType="RepeatButton">
                                        <Grid>
                                            <Rectangle Fill="Transparent" IsHitTestVisible="True"/>
                                            <Path Data="M4,0 L4,7 0,3.5 z" Stroke="{x:Null}" Margin="10,0,0,0" x:Name="arrow"
                                                  Fill="{DynamicResource CODE.Framework-Application-ThemeBrush1}"  
                                                  HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None"/>
                                            <Path Data="M4,0 L4,7 0,3.5 z" Stroke="{x:Null}" Margin="10,0,0,0" x:Name="arrow2"
                                                  Fill="White" Opacity=".4" Visibility="Collapsed"
                                                  HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Visibility" Value="Visible" TargetName="arrow2" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </RepeatButton.Template>
                            </classes:ScrollLeftButton>
                            <classes:ScrollRightButton Width="40" Height="20" ScrollViewer="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                <RepeatButton.Template>
                                    <ControlTemplate TargetType="RepeatButton">
                                        <Grid>
                                            <Rectangle Fill="Transparent" IsHitTestVisible="True"/>
                                            <Path Data="M0,0 L0,7 4,3.5 z" Stroke="{x:Null}" Margin="0,0,10,0" x:Name="arrow"
                                                  Fill="{DynamicResource CODE.Framework-Application-ThemeBrush1}"  
                                                  HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None"/>
                                            <Path Data="M0,0 L0,7 4,3.5 z" Stroke="{x:Null}" Margin="0,0,10,0" x:Name="arrow2"
                                                  Fill="White" Opacity=".4" Visibility="Collapsed"
                                                  HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Visibility" Value="Visible" TargetName="arrow2" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </RepeatButton.Template>
                            </classes:ScrollRightButton>
                            <classes:ScrollLeftButton Height="20" ScrollViewer="{Binding RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,5,0"
                                                      Content="..." FontSize="14" FontWeight="Bold" Foreground="{DynamicResource CODE.Framework-Application-ThemeBrush1}">
                                <RepeatButton.Template>
                                    <ControlTemplate TargetType="RepeatButton">
                                        <Grid>
                                            <Rectangle Fill="Transparent" IsHitTestVisible="True"/>
                                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" TextElement.Foreground="White" Opacity=".4" Visibility="Hidden" x:Name="content2" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Visibility" Value="Visible" TargetName="content2" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </RepeatButton.Template>
                            </classes:ScrollLeftButton>
                        </StackPanel>
                        <ScrollContentPresenter ClipToBounds="False" Margin="0,-1.5,0,2" Grid.Column="1"
                                                x:Name="PART_ScrollContentPresenter" SnapsToDevicePixels="True" 
                                                Content="{TemplateBinding ScrollViewer.Content}" />
                        <classes:ScrollRightButton Height="20" ScrollViewer="{Binding RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="2" Margin="5,0"
                                                   Content="..." FontSize="14" FontWeight="Bold" Foreground="{DynamicResource CODE.Framework-Application-ThemeBrush1}">
                            <RepeatButton.Template>
                                <ControlTemplate TargetType="RepeatButton">
                                    <Grid>
                                        <Rectangle Fill="Transparent" IsHitTestVisible="True"/>
                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" TextElement.Foreground="White" Opacity=".4" Visibility="Hidden" x:Name="content2" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Visibility" Value="Hidden" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Visibility" Value="Visible" TargetName="content2" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </RepeatButton.Template>
                        </classes:ScrollRightButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:ZoomSlider" x:Key="CODE.Framework.Wpf.Mvvm.ZoomSlider">
		<Setter Property="Margin" Value="0" />
		<Setter Property="Foreground" Value="{DynamicResource CODE.Framework-Workplace-StatusReadyForegroundBrush}" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ZoomSlider">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <RepeatButton Command="Slider.DecreaseSmall" Content="-" FontWeight="Bold" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" MinWidth="12">
                                <RepeatButton.Template>
                                    <ControlTemplate TargetType="RepeatButton">
                                        <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                                            <ContentPresenter Margin="0,0,0,2" />
                                        </Grid>
                                    </ControlTemplate>
                                </RepeatButton.Template>
                            </RepeatButton>
							<Rectangle Width="1" Height="8" Fill="White" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" />
                            <Border x:Name="TrackBackground" BorderBrush="White" BorderThickness="1" Background="White" Height="1" Margin="5,0" VerticalAlignment="Center" Grid.Column="1">
                                <Canvas Margin="-9,-1">
                                    <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="1" Visibility="Hidden"/>
                                </Canvas>
                            </Border>
                            <Track x:Name="PART_Track" Grid.Column="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="Slider.DecreaseSmall">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="IsTabStop" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                    </RepeatButton>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="Slider.IncreaseSmall">
                                        <RepeatButton.Style>
                                            <Style TargetType="{x:Type RepeatButton}">
                                                <Setter Property="OverridesDefaultStyle" Value="True"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="Focusable" Value="False"/>
                                                <Setter Property="IsTabStop" Value="False"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                            <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                    </RepeatButton>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Focusable="False" Height="12" OverridesDefaultStyle="True" VerticalAlignment="Center" Width="4">
                                        <Thumb.Template>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Grid HorizontalAlignment="Center" UseLayoutRounding="True" VerticalAlignment="Center">
                                                    <Path x:Name="grip" Data="M0,0C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0z" Fill="White" Stretch="Fill" SnapsToDevicePixels="True" UseLayoutRounding="True" VerticalAlignment="Center"/>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Fill" TargetName="grip" Value="#FFDCECFC"/>
                                                    </Trigger>
                                                    <Trigger Property="IsDragging" Value="True">
                                                        <Setter Property="Fill" TargetName="grip" Value="#FFDAECFC"/>
                                                    </Trigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Fill" TargetName="grip" Value="#FFF0F0F0"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton Content="+" Foreground="{TemplateBinding Foreground}" FontWeight="Bold" VerticalAlignment="Center" MinWidth="12" Grid.Column="2" Command="Slider.IncreaseSmall">
                                <RepeatButton.Template>
                                    <ControlTemplate TargetType="RepeatButton">
                                        <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                                            <ContentPresenter  Margin="0,0,0,2" />
                                        </Grid>
                                    </ControlTemplate>
                                </RepeatButton.Template>
                            </RepeatButton>
                            <Label VerticalAlignment="Center" HorizontalAlignment="Stretch" Padding="0" Margin="4,0,0,0" Content="000%" Foreground="Transparent" Grid.Column="3" />
                            <Label VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Margin="4,0,0,0" Padding="0" Content="{TemplateBinding ZoomText}" Grid.Column="3" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>
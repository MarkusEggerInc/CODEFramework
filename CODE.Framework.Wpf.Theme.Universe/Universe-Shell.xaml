<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mvvm="clr-namespace:CODE.Framework.Wpf.Mvvm;assembly=CODE.Framework.Wpf.Mvvm"
                    xmlns:c1="clr-namespace:CODE.Framework.Wpf.Controls;assembly=CODE.Framework.Wpf"
                    xmlns:c2="clr-namespace:CODE.Framework.Wpf.Theme.Universe.Controls"
                    xmlns:layout="clr-namespace:CODE.Framework.Wpf.Layout;assembly=CODE.Framework.Wpf"
                    xmlns:bindingConverters="clr-namespace:CODE.Framework.Wpf.BindingConverters;assembly=CODE.Framework.Wpf"
                    xmlns:utilities="clr-namespace:CODE.Framework.Wpf.Utilities;assembly=CODE.Framework.Wpf">

    <Style TargetType="mvvm:Shell" x:Key="CODE.Framework.Wpf.Mvvm.Shell-Style">
        <Setter Property="Background" Value="{DynamicResource CODE.Framework-Application-BackgroundBrush1}"/>
        <Setter Property="c1:WindowEx.DynamicIcon" Value="/Images/Application.png" />
        <Setter Property="c1:WindowEx.IsBorderless" Value="True" />
        <Setter Property="c1:WindowEx.HeaderHeight" Value="26" />
        <Setter Property="c1:WindowEx.AutoWindowDragEnabled" Value="True" />
        <Setter Property="c1:WindowEx.AutoWindowMaximizeEnabled" Value="True" />
        <Setter Property="c1:WindowEx.AutoWindowResizingEnabled" Value="True"/>
        <Setter Property="TopLevelViewLaunchMode" Value="Popup" />
        <Setter Property="Template" Value="{DynamicResource CODE.Framework.Wpf.Mvvm.Shell-Template}" />
        <Setter Property="c1:TouchEx.UpdatePointingDeviceInputMode" Value="True" />
    </Style>

    <ControlTemplate TargetType="mvvm:Shell" x:Key="CODE.Framework.Wpf.Mvvm.Shell-Template">
        <ControlTemplate.Resources>
            <Storyboard x:Key="ApplicationStatusChanged">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="statusGrid">
                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:11" Value="{x:Static Visibility.Visible}"/>
                    <DiscreteObjectKeyFrame KeyTime="0:0:11.1" Value="{x:Static Visibility.Collapsed}"/>
                </ObjectAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="statusGrid">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:10" Value="1"/>
                    <EasingDoubleKeyFrame KeyTime="0:0:11" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid c1:GridEx.RowHeights="Auto,*,Auto" c1:GridEx.ColumnWidths="Auto,*" Background="{TemplateBinding Background}">
            <Border BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush3}" BorderThickness="1" Grid.RowSpan="3" Grid.ColumnSpan="2" Panel.ZIndex="10001" />
            <Grid c1:GridEx.ColumnWidths="*,Auto" HorizontalAlignment="Stretch" Margin="0,0,0,-1" Grid.ColumnSpan="2">
                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left" 
                           x:Name="windowTitle" Text="{TemplateBinding Title}" Margin="10,5"
                           FontFamily="{DynamicResource DefaultFont}" FontSize="{DynamicResource FontSize-Smallest}"
                           Foreground="{DynamicResource CODE.Framework-Application-ForegroundBrush3}"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Height="30" Margin="0" Grid.Column="2">
                    <c1:MinimizeButton/>
                    <c1:ToggleMaximizeButton/>
                    <c1:CloseButton/>
                </StackPanel>
            </Grid>
            <c2:ViewActionHamburgerMenu ExpandsPermanently="True" SnapsToDevicePixels="True" Grid.Row="1" Margin="0" VerticalAlignment="Stretch" HorizontalAlignment="Left" Model="{Binding .}" Background="{DynamicResource CODE.Framework-Application-BackgroundBrush2}"/>
            <c2:ShellTabControl Grid.Column="1" Grid.Row="1" SnapsToDevicePixels="True"
                                ItemsSource="{TemplateBinding NormalViews}"
                                SelectedIndex="{Binding SelectedNormalView, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                Style="{DynamicResource CODE.Framework.Wpf.Mvvm.Shell-NormalViewsHost}"
                                HomePageVisible="False" x:Name="normalViewHost"/>
            <ContentPresenter Grid.Column="1" Grid.Row="1" SnapsToDevicePixels="True" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
            <Grid VerticalAlignment="Bottom" Height="Auto" Grid.Row="1" Grid.ColumnSpan="2" SnapsToDevicePixels="True"
			      Background="{DynamicResource CODE.Framework-Universe-StatusReadyBackgroundBrush}" 
				  Visibility="Collapsed" x:Name="statusGrid" Opacity="0">
                <ContentControl Content="{TemplateBinding CurrentStatusView}" Margin="5,2,5,3" x:Name="statusContent"
                                FontFamily="{DynamicResource DefaultFont}" FontSize="{DynamicResource FontSize-Large}" FontWeight="Light" 
                                Foreground="{DynamicResource CODE.Framework-Universe-StatusReadyForegroundBrush}"/>
            </Grid>
            <ItemsControl VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="10" Width="310" HorizontalContentAlignment="Right" Grid.Row="1" Grid.ColumnSpan="3"
                          ItemsSource="{TemplateBinding CurrentNotifications}" ItemTemplate="{DynamicResource NotificationItemTemplate}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="CurrentApplicationStatus" Value="Processing">
                <Setter Property="Background" TargetName="statusGrid" Value="{DynamicResource CODE.Framework-Universe-StatusProcessingBackgroundBrush}"/>
                <Setter Property="Foreground" TargetName="statusContent" Value="{DynamicResource CODE.Framework-Universe-StatusProcessingForegroundBrush}"/>
            </Trigger>
            <Trigger Property="CurrentApplicationStatus" Value="Warning">
                <Setter Property="Background" TargetName="statusGrid" Value="{DynamicResource CODE.Framework-Universe-StatusWarningBackgroundBrush}"/>
                <Setter Property="Foreground" TargetName="statusContent" Value="{DynamicResource CODE.Framework-Universe-StatusWarningForegroundBrush}"/>
            </Trigger>
            <Trigger Property="CurrentApplicationStatus" Value="Error">
                <Setter Property="Background" TargetName="statusGrid" Value="{DynamicResource CODE.Framework-Universe-StatusErrorBackgroundBrush}"/>
                <Setter Property="Foreground" TargetName="statusContent" Value="{DynamicResource CODE.Framework-Universe-StatusErrorForegroundBrush}"/>
            </Trigger>
            <EventTrigger RoutedEvent="mvvm:Shell.StatusChanged">
                <BeginStoryboard x:Name="ApplicationStatusChanged_BeginStoryboard" Storyboard="{StaticResource ApplicationStatusChanged}"/>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="c2:ShellTabControl" x:Key="CODE.Framework.Wpf.Mvvm.Shell-NormalViewsHost" >
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid c1:GridEx.RowHeights="Auto,*">
                        <AdornerDecorator Grid.Row="1">
                            <ContentControl Content="{Binding View}" Margin="0"/>
                        </AdornerDecorator>
                        <mvvm:ModelStatusGrid Model="{Binding Model}" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="modelStatus" Grid.RowSpan="2">
                            <mvvm:ModelStatusGrid.Resources>
                                <mvvm:ModelStatusToVisibleConverter x:Key="ModelStatusToVisibleConverter" />
                            </mvvm:ModelStatusGrid.Resources>
                            <c2:CircularProgressAnimation IsActive="True" Height="50" Width="50" DotDiameter="5" 
                                                          DotBrush="{DynamicResource CODE.Framework-Application-ThemeBrush1}"
                                                          Visibility="{Binding Path=ModelStatus, ElementName=modelStatus, Converter={StaticResource ModelStatusToVisibleConverter}}" />
                        </mvvm:ModelStatusGrid>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource CODE.Framework.Wpf.Mvvm.Shell-ViewHost}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c2:ShellTabControl">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ShowHomepage">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ContentPanel">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="200"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentPanel">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentPanel">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentControl">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="contentControl">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="contentControl">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HideHomepage">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ContentPanel">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentPanel">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentPanel">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="contentControl">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="contentControl">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentControl">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SwitchPage">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="ContentPanel">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="100"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentPanel">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentPanel">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local" c1:GridEx.RowHeights="48,*">
                        <Grid.Resources>
                            <bindingConverters:ColorToBrushWithFallbackConverter x:Key="BrushFallbackConverter" IgnoreColor="#00FFFFFF" FallbackBrush="{DynamicResource CODE.Framework-Application-ThemeBrush1}" />
                        </Grid.Resources>
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{Binding SelectedItem.View.ViewThemeColor, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay, Converter={StaticResource BrushFallbackConverter}}" />
                        <layout:BidirectionalStackPanel Orientation="Horizontal">
                            <c2:SelectOpenViewButton x:Name="selectViewButton" TabControl="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime}">
                                <c2:SelectOpenViewButton.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Grid Height="48" Width="48" Margin="0" ToolTip="{Binding Caption}" Background="Transparent" x:Name="root">
                                            <Rectangle x:Name="icon" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="12">
                                                <Rectangle.Fill>
                                                    <DrawingBrush Stretch="Uniform">
                                                        <DrawingBrush.Drawing>
                                                            <DrawingGroup>
                                                                <DrawingGroup.Children>
                                                                    <GeometryDrawing Brush="White" Geometry="F1 M 22.5476,11.3829L 22.5476,12.7077L 3.93851,12.7077L 12.0856,20.8514L 11.1516,21.7854L 1.41491,12.0453L 11.1516,2.30527L 12.0856,3.2392L 3.93851,11.3829L 22.5476,11.3829 Z "/>
                                                                </DrawingGroup.Children>
                                                            </DrawingGroup>
                                                        </DrawingBrush.Drawing>
                                                    </DrawingBrush>
                                                </Rectangle.Fill>
                                            </Rectangle>
                                            <Rectangle Fill="#19000000" x:Name="highlight" Visibility="Collapsed" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True" SourceName="root">
                                                <Setter Property="Visibility" Value="Visible" TargetName="highlight" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value=".5" TargetName="icon" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </c2:SelectOpenViewButton.Template>
                            </c2:SelectOpenViewButton>
                            <Label Content="{Binding SelectedItem.ViewTitle, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="Bold"
                                   VerticalAlignment="Center" HorizontalAlignment="Left" Margin="20,0,0,0" Foreground="White"/>
                            <mvvm:ActionItemsControl Model="{Binding SelectedItem.Model, RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Right" Margin="0" IsTabStop="false" VerticalAlignment="Bottom">
                                <mvvm:ActionItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button x:Name="toolbarButton" Command="{Binding}" Height="48" Width="48" Margin="0" Padding="0"
                                                IsDefault="{Binding IsDefault, Mode=OneWay}" IsCancel="{Binding IsCancel, Mode=OneWay}">
                                            <Button.Template>
                                                <ControlTemplate TargetType="Button">
                                                    <Grid Height="48" Width="48" Margin="0" ToolTip="{Binding Caption}" Background="Transparent" x:Name="root">
                                                        <Rectangle Fill="#19000000" x:Name="checked" Visibility="Collapsed" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                                                        <mvvm:ThemeIcon x:Name="icon" IconResourceKey="{Binding BrushResourceKey}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="12">
                                                            <mvvm:ThemeIcon.ReplacementBrushes>
                                                                <utilities:ObservableResourceDictionary>
                                                                    <SolidColorBrush x:Key="CODE.Framework-Universe-IconForegroundBrush" Color="White"/>
                                                                </utilities:ObservableResourceDictionary>
                                                            </mvvm:ThemeIcon.ReplacementBrushes>
                                                        </mvvm:ThemeIcon>
                                                        <Rectangle Fill="#19000000" x:Name="highlight" Visibility="Collapsed" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                                                    </Grid>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True" SourceName="root">
                                                            <Setter Property="Visibility" Value="Visible" TargetName="highlight" />
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="False">
                                                            <Setter Property="Opacity" Value=".5" TargetName="icon" />
                                                        </Trigger>
                                                        <DataTrigger Binding="{Binding DataContext.IsChecked, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                            <Setter Property="Visibility" Value="Visible" TargetName="checked" />
                                                        </DataTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding BeginGroup}" Value="True">
                                                <Setter Property="Margin" Value="15,0,0,0" TargetName="toolbarButton" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </mvvm:ActionItemsControl.ItemTemplate>
                                <mvvm:ActionItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </mvvm:ActionItemsControl.ItemsPanel>
                            </mvvm:ActionItemsControl>
                        </layout:BidirectionalStackPanel>
                        <TabPanel IsItemsHost="true" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" Height="0" ClipToBounds="True"/>
                        <StackPanel Orientation="Horizontal" x:Name="HeaderPanel" IsItemsHost="True" KeyboardNavigation.TabIndex="1" Visibility="Collapsed"/>
                        <Border x:Name="ContentPanel" BorderBrush="{x:Null}" BorderThickness="0" Background="{x:Null}" 
                                KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" 
                                KeyboardNavigation.TabNavigation="Local" Grid.Row="1" RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Border.RenderTransform>
                            <ContentPresenter x:Name="PART_SelectedContentHost" 
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}" 
                                              Content="{TemplateBinding SelectedContent}" 
                                              ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" 
                                              ContentSource="SelectedContent" 
                                              Margin="0" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="PageSwitched" >
                            <BeginStoryboard Storyboard="{StaticResource SwitchPage}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TabItem" x:Key="CODE.Framework.Wpf.Mvvm.Shell-ViewHost">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid x:Name="grid" SnapsToDevicePixels="True" Margin="20,0,20,0">
                        <Rectangle x:Name="rectangle" Fill="{DynamicResource CODE.Framework-Application-HighlightBrush1}" Opacity="0.5" Visibility="Collapsed" />
                        <Border x:Name="Bd" BorderThickness="2" VerticalAlignment="Bottom" Height="4" BorderBrush="{DynamicResource CODE.Framework-Application-ThemeBrush1}" CornerRadius="2" Visibility="Hidden"/>
                        <Label Content="{Binding ViewTitle}" FontSize="{DynamicResource FontSize-Larger}" FontWeight="Light" x:Name="Content" Margin="0,30,0,10" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="{DynamicResource CODE.Framework-Application-ShellHeaderBrush}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="rectangle" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Visibility" TargetName="Bd" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c2:HamburgerMenuButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c2:HamburgerMenuButton">
                    <ControlTemplate.Resources>
                        <SolidColorBrush x:Key="CODE.Framework-Universe-IconForegroundBrush" Color="White" />
                    </ControlTemplate.Resources>
                    <Grid c1:GridEx.ColumnWidths="48,*,Auto" Margin="0" ToolTip="{TemplateBinding ToolTip}" Background="Transparent" x:Name="root" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <mvvm:ThemeIcon IconResourceKey="{Binding BrushResourceKey}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="14">
                            <mvvm:ThemeIcon.ReplacementBrushes>
                                <utilities:ObservableResourceDictionary>
                                    <SolidColorBrush x:Key="CODE.Framework-Universe-IconForegroundBrush" Color="White" />
                                </utilities:ObservableResourceDictionary>
                            </mvvm:ThemeIcon.ReplacementBrushes>
                        </mvvm:ThemeIcon>
                        <Rectangle Fill="#19FFFFFF" x:Name="highlight" Visibility="Collapsed" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.ColumnSpan="3"/>
                        <Label Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,15,0" Content="{TemplateBinding Caption}" Foreground="White" HorizontalContentAlignment="Left" />
                        <Rectangle Grid.Column="2" Height="12" Width="12" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5" Visibility="Collapsed" x:Name="subItemIcon">
                            <Rectangle.Fill>
                                <DrawingBrush Stretch="Uniform">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <DrawingGroup.Children>
                                                <GeometryDrawing Brush="White" Geometry="F1 M 3.01869,22.2379L 1.76683,20.9861L 10.8544,11.8984L 1.76683,2.81083L 3.01869,1.55896L 13.3582,11.8984L 3.01869,22.2379 Z "/>
                                                <GeometryDrawing Brush="White" Geometry="F1 M 11.9593,22.2098L 10.7075,20.9579L 19.7951,11.8703L 10.7075,2.7827L 11.9593,1.53084L 22.2988,11.8703L 11.9593,22.2098 Z "/>
                                            </DrawingGroup.Children>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="root">
                            <Setter Property="Visibility" Value="Visible" TargetName="highlight" />
                        </Trigger>
                        <Trigger Property="HasSubItems" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="subItemIcon" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c2:HamburgerMenuTopButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c2:HamburgerMenuTopButton">
                    <Grid c1:GridEx.ColumnWidths="48,*" Height="48" Margin="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                          Background="{DynamicResource CODE.Framework-Application-ThemeBrush1}" x:Name="root">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="13">
                            <Rectangle.Fill>
                                <DrawingBrush Stretch="Uniform">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <DrawingGroup.Children>
                                                <GeometryDrawing Brush="White" Geometry="F1 M 22.5791,6.78228L 1.38345,6.78228L 1.38345,5.51054L 22.5791,5.51054L 22.5791,6.78228 Z M 22.5791,17.3801L 1.38345,17.3801L 1.38345,16.1083L 22.5791,16.1083L 22.5791,17.3801 Z M 22.5791,12.0812L 1.38345,12.0812L 1.38345,10.8094L 22.5791,10.8094L 22.5791,12.0812 Z "/>
                                            </DrawingGroup.Children>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle Fill="#19FFFFFF" x:Name="highlight" Visibility="Collapsed" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.ColumnSpan="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="root">
                            <Setter Property="Visibility" Value="Visible" TargetName="highlight" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Window" x:Key="CODE.Framework.Wpf.Mvvm.Shell-TopLevelMessageBoxWindowStyle">
        <Setter Property="Background" Value="{DynamicResource CODE.Framework-Application-BackgroundBrush1}" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="c1:WindowEx.AutoWindowDragEnabled" Value="True" />
        <Setter Property="ShowInTaskbar" Value="True" />
        <Setter Property="SizeToContent"  Value="WidthAndHeight" />
        <Setter Property="c1:WindowEx.WindowStartupLocationStylable" Value="CenterOwner"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid c1:GridEx.RowHeights="Auto,*,Auto" MinWidth="250" Background="{TemplateBinding Background}" MaxWidth="1000" MaxHeight="700">
                        <Border Grid.RowSpan="3" BorderThickness="1" BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush3}" />
                        <Label FontFamily="{DynamicResource DefaultFont}"
                               FontWeight="Light"
                               FontSize="{DynamicResource FontSize-Largest}"
                               Foreground="{DynamicResource CODE.Framework-Application-ThemeBrush1}"
                               Content="{TemplateBinding Title}"
                               Margin="5" Grid.Column="1"/>
                        <AdornerDecorator Grid.Row="1">
                            <ContentPresenter Margin="60,15" />
                        </AdornerDecorator>
                        <mvvm:ActionGrid Grid.Row="2" Model="{Binding}" Margin="60,15,40,20">
                            <ItemsControl ItemsSource="{Binding Actions}" HorizontalAlignment="Right" Focusable="False">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button Content="{Binding Caption}" Command="{Binding}" 
                                                IsDefault="{Binding IsDefault, Mode=OneWay}" IsCancel="{Binding IsCancel, Mode=OneWay}"
                                                Margin="10,0,0,0"/>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </mvvm:ActionGrid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Window" x:Key="CODE.Framework.Wpf.Mvvm.Shell-TopLevelWindowStyle">
        <Setter Property="Background" Value="{DynamicResource CODE.Framework-Application-BackgroundBrush1}" />
        <Setter Property="ShowInTaskbar" Value="True" />
        <Setter Property="Template" Value="{DynamicResource Universe-TopLevelWindow-Template}" />
        <Setter Property="ShowInTaskbar" Value="True" />
        <Setter Property="c1:WindowEx.IsBorderless" Value="True" />
        <Setter Property="c1:WindowEx.AutoWindowDragEnabled" Value="True" />
        <Setter Property="c1:WindowEx.AutoWindowMaximizeEnabled" Value="True" />
        <Setter Property="c1:WindowEx.AutoWindowResizingEnabled" Value="True"/>
        <Setter Property="mvvm:Closable.RaiseClosingEvents" Value="True" />
        <Setter Property="c1:WindowEx.WindowStartupLocationStylable" Value="CenterScreen"/>
    </Style>

    <ControlTemplate TargetType="Window" x:Key="Universe-TopLevelWindow-Template">
        <Grid c1:GridEx.RowHeights="Auto,*,Auto" Background="{TemplateBinding Background}">
            <Grid.Resources>
                <mvvm:ModelStatusToVisibleConverter x:Key="ModelStatusToVisibleConverter" />
            </Grid.Resources>
            <Border Grid.RowSpan="3" BorderThickness="1" BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush3}" />
            <Label Content="{TemplateBinding Title}" Margin="5" FontSize="{DynamicResource FontSize-Smaller}" Foreground="{DynamicResource CODE.Framework-Application-ThemeBrush1}" />
            <AdornerDecorator Grid.Row="1">
                <ContentPresenter Margin="20,10" />
            </AdornerDecorator>
            <mvvm:ModelStatusGrid Model="{Binding}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" x:Name="modelStatus" Grid.Row="1">
                <c2:CircularProgressAnimation IsActive="True" Height="50" Width="50" DotDiameter="5" HorizontalAlignment="Center" VerticalAlignment="Center"
                                              DotBrush="{DynamicResource CODE.Framework-Application-ThemeBrush1}"
                                              Visibility="{Binding Path=ModelStatus, ElementName=modelStatus, Converter={StaticResource ModelStatusToVisibleConverter}}" />
            </mvvm:ModelStatusGrid>
            <mvvm:ActionGrid Grid.Row="2" Model="{Binding}" Margin="20,15,20,15">
                <ItemsControl ItemsSource="{Binding Actions}" HorizontalAlignment="Right">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Content="{Binding Caption}" Command="{Binding}" Margin="5,0,0,0"
                                    IsDefault="{Binding IsDefault, Mode=OneWay}" IsCancel="{Binding IsCancel, Mode=OneWay}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </mvvm:ActionGrid>
        </Grid>
    </ControlTemplate>

    <Style TargetType="c1:CloseButton">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c1:CloseButton">
                    <Grid>
                        <Rectangle x:Name="bg" Fill="Transparent" IsHitTestVisible="True" />
                        <Border Width="12" Height="1" BorderThickness="1" RenderTransformOrigin=".5,.5"
                                VerticalAlignment="Center" HorizontalAlignment="Center"
                                BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush3}">
                            <Border.RenderTransform>
                                <RotateTransform Angle="45" />
                            </Border.RenderTransform>
                        </Border>
                        <Border Width="12" Height="1" BorderThickness="1" RenderTransformOrigin=".5,.5"
                                VerticalAlignment="Center" HorizontalAlignment="Center"
                                BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush3}">
                            <Border.RenderTransform>
                                <RotateTransform Angle="-45" />
                            </Border.RenderTransform>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" Value="{DynamicResource CODE.Framework-Application-HighlightBrush2}" TargetName="bg" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c1:ToggleMaximizeButton">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c1:ToggleMaximizeButton">
                    <Grid>
                        <Rectangle x:Name="bg" Fill="Transparent" IsHitTestVisible="True" />
                        <Border Width="10" Height="10" BorderThickness="1" x:Name="norm"
                                VerticalAlignment="Center" HorizontalAlignment="Center" 
                                BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush3}" />
                        <Border Width="8" Height="8" BorderThickness="1" Margin="4,0,0,4" x:Name="max2"
                                VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed"
                                BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush3}" />
                        <Border Width="8" Height="8" BorderThickness="1" Margin="0,2,2,0" x:Name="max1"
                                VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed"
                                BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush3}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" Value="#19000000" TargetName="bg" />
                        </Trigger>
                        <Trigger Property="IsMaximized" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="norm"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="max1"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="max2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="c1:MinimizeButton">
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="c1:MinimizeButton">
                    <Grid>
                        <Rectangle x:Name="bg" Fill="Transparent" IsHitTestVisible="True" />
                        <Border Width="10" Height="1" BorderThickness="0,0,0,1"
                                VerticalAlignment="Center" HorizontalAlignment="Center"
                                BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush3}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" Value="#19000000" TargetName="bg" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:BindingConverters="clr-namespace:CODE.Framework.Wpf.BindingConverters;assembly=CODE.Framework.Wpf"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:controls="clr-namespace:CODE.Framework.Wpf.Controls;assembly=CODE.Framework.Wpf">

    <Style TargetType="DatePicker">
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource CODE.Framework-Application-ForegroundColor1}" Opacity=".5"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="{DynamicResource CODE.Framework-Application-ForegroundBrush1}"/>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource CODE.Framework-Application-BackgroundColor1}" Opacity=".8"/>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="{DynamicResource FontSize-Normal}"/>
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
        <Setter Property="Template" Value="{DynamicResource Universe-DatePicker-Template}"/>
        <Setter Property="CalendarStyle" Value="{DynamicResource Universe-Control-Calendar}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Height" Value="{x:Static system:Double.NaN}"/>
    </Style>

    <ControlTemplate x:Key="Universe-DatePicker-Template" TargetType="DatePicker">
        <ControlTemplate.Resources>
            <BindingConverters:LitBrushConverter x:Key="LitBrushConverter" />
        </ControlTemplate.Resources>
        <Border BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LitBrushConverter}, ConverterParameter=1.5}" 
                BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="0" Name="Bd">
            <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" controls:GridEx.ColumnWidths="*,Auto">
                <Grid.Resources>
                    <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="Button">
                        <Grid ClipToBounds="True">
                            <Rectangle Fill="{DynamicResource CODE.Framework-Application-ThemeBrush1}" Visibility="Collapsed" x:Name="highlight"/>
                            <Rectangle Fill="{DynamicResource CODE.Framework-Icon-Calendar}" MaxHeight="18" MaxWidth="18" Margin="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Visibility" Value="Visible" TargetName="highlight"/>
                                <Setter Property="Opacity" Value=".33" TargetName="highlight"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Visibility" Value="Visible" TargetName="highlight"/>
                                <Setter Property="Opacity" Value="50" TargetName="highlight"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Grid.Resources>
                <Button x:Name="PART_Button" Grid.Column="1" Focusable="False" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Stretch" Width="{Binding ElementName=PART_Button, Mode=OneWay, Path=ActualHeight}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border BorderThickness="0" Background="Transparent">
                                <Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                    <Path Data="M0,0 L5,5 10,0" HorizontalAlignment="Center" StrokeThickness="2" Stroke="{TemplateBinding Foreground}" VerticalAlignment="Center" Margin="4,0"  />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <DatePickerTextBox x:Name="PART_TextBox" Focusable="{TemplateBinding Focusable}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Center" 
                                   Margin="4,3" Padding="0" FontFamily="{DynamicResource DefaultFont}" FontSize="{DynamicResource FontSize-Normal}" FocusVisualStyle="{x:Null}">
                    <DatePickerTextBox.Template>
                        <ControlTemplate TargetType="DatePickerTextBox">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0" Padding="0"/>
                        </ControlTemplate>
                    </DatePickerTextBox.Template>
                </DatePickerTextBox>
                <Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" IsHitTestVisible="False" Opacity="0" Margin="0" controls:GridEx.ColumnWidths="*,Auto">
                    <Rectangle Fill="#A5FFFFFF" RadiusY="1" RadiusX="1"/>
                    <Rectangle Grid.Column="1" Fill="#A5FFFFFF" VerticalAlignment="Stretch" Margin="0" RadiusY="1" RadiusX="1" Width="19"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False"/>
                </Grid>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LitBrushConverter}, ConverterParameter=1.5}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource CODE.Framework-Application-BackgroundColor1}" Opacity="1"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource CODE.Framework-Application-ForegroundColor1}" Opacity="1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>
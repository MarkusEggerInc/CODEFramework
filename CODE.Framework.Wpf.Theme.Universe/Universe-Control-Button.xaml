<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mvvm="clr-namespace:CODE.Framework.Wpf.Mvvm;assembly=CODE.Framework.Wpf.Mvvm">

    <Style TargetType="Button" x:Key="Universe-Control-Button">
        <Setter Property="BorderBrush" Value="#33000000"/>
        <Setter Property="Background" Value="#33000000"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="{DynamicResource CODE.Framework-Application-ForegroundBrush1}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize-Normal}"/>
        <Setter Property="Template" Value="{DynamicResource Universe-Button-Template}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Padding" Value="12,4" />
    </Style>

    <ControlTemplate TargetType="Button" x:Key="Universe-Button-Template">
        <Grid>
            <Border x:Name="Chrome" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" 
                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#44000000"/>
                <Setter Property="BorderBrush" Value="#66000000"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#FFADADAD"/>
            </Trigger>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="Background" Value="{DynamicResource CODE.Framework-Application-ThemeBrush1}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource CODE.Framework-Application-ThemeBrush1}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="Button" BasedOn="{StaticResource Universe-Control-Button}" />
    <Style TargetType="mvvm:ViewActionMenuButton" BasedOn="{StaticResource Universe-Control-Button}" />

    <Style TargetType="Button" x:Key="Universe-Control-TileButton">
        <Setter Property="Foreground" Value="{DynamicResource CODE.Framework-Application-ForegroundBrush1}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="Pressed">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="contentPresenter">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="contentPresenter">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="{DynamicResource CODE.Framework-Application-ThemeBrush1}">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                          HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RenderTransformOrigin="0.5,0.5" 
                                          >
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                        <Rectangle Stroke="Black" StrokeThickness="3" Fill="{x:Null}" Visibility="Hidden" Opacity=".5" x:Name="ButtonOutline" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="UIElement.MouseLeftButtonUp">
                            <BeginStoryboard Storyboard="{StaticResource Pressed}"/>
                        </EventTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="ButtonOutline" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
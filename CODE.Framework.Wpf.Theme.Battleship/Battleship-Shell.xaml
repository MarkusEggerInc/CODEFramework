
    <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mvvm="clr-namespace:CODE.Framework.Wpf.Mvvm;assembly=CODE.Framework.Wpf.Mvvm"
                    xmlns:controls="clr-namespace:CODE.Framework.Wpf.Theme.Battleship.Controls"
                    xmlns:controls1="clr-namespace:CODE.Framework.Wpf.Controls;assembly=CODE.Framework.Wpf">

    <Style TargetType="Window" x:Key="CODE.Framework.Wpf.Mvvm.Shell-TopLevelWindowStyle">
        <Setter Property="Background" Value="{DynamicResource CODE.Framework-Application-BackgroundBrush1}" />
        <Setter Property="ShowInTaskbar" Value="True" />
        <Setter Property="SizeToContent"  Value="WidthAndHeight" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid Background="{TemplateBinding Background}" Margin="-5">
                        <Grid Margin="15" controls1:GridEx.RowHeights="Auto,Auto">
                            <ContentPresenter />
                            <mvvm:ActionGrid Grid.Row="1" Model="{Binding}" Margin="0,20,0,0">
                                <ItemsControl ItemsSource="{Binding Actions}" HorizontalAlignment="Right">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Button FontSize="{DynamicResource FontSize-Normal}" 
                                                    Content="{Binding Caption}" Command="{Binding}" 
                                                    IsDefault="{Binding IsDefault, Mode=OneWay}" IsCancel="{Binding IsCancel, Mode=OneWay}"
                                                    Margin="5,0,0,0" Padding="7,3" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </mvvm:ActionGrid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="Window" x:Key="CODE.Framework.Wpf.Mvvm.Shell-TopLevelMessageBoxWindowStyle">
        <Setter Property="Background" Value="{DynamicResource CODE.Framework-Application-BackgroundBrush1}" />
        <Setter Property="ShowInTaskbar" Value="True" />
        <Setter Property="SizeToContent"  Value="WidthAndHeight" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid Background="{TemplateBinding Background}" Margin="-5" MaxWidth="1000" MaxHeight="700">
                        <Grid Margin="0" controls1:GridEx.RowHeights="Auto,Auto">
                            <Border Background="White" Padding="10">
                                <ContentPresenter />
                            </Border>
                            <mvvm:ActionGrid Grid.Row="1" Model="{Binding}" Margin="15,20,15,15">
                                <ItemsControl ItemsSource="{Binding Actions}" HorizontalAlignment="Right" Focusable="False">
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Button FontSize="{DynamicResource FontSize-Normal}" x:Name="Button"
                                                    Content="{Binding Caption}" Command="{Binding}" 
                                                    IsDefault="{Binding IsDefault, Mode=OneWay}" IsCancel="{Binding IsCancel, Mode=OneWay}"
                                                    Margin="5,0,0,0" Padding="7,3" MinWidth="75" />
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal" />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </mvvm:ActionGrid>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type mvvm:Shell}" x:Key="CODE.Framework.Wpf.Mvvm.Shell-Style">
        <Setter Property="Background" Value="{DynamicResource CODE.Framework-Application-BackgroundBrush1}" />
        <Setter Property="controls1:WindowEx.IsBorderless" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type mvvm:Shell}">
                    <Grid Background="{TemplateBinding Background}" controls1:GridEx.RowHeights="Auto,Auto,*,Auto">
                        <controls:BattleshipMenu Model="{Binding}" SelectedView="{Binding Path=SelectedItem, ElementName=OpenViews, Mode=OneWay}" />
                        <Border BorderBrush="Black" Opacity=".15" BorderThickness="0,1,0,0" Visibility="{Binding ElementName=toolbar, Path=Visibility, Mode=OneWay}" Grid.Row="1" />
                        <mvvm:ViewActionToolbar Model="{Binding}" SelectedView="{Binding Path=SelectedItem, ElementName=OpenViews, Mode=OneWay}" 
                                                Grid.Row="1" x:Name="toolbar" Margin="7,2,2,2" />
                        <TabControl x:Name="OpenViews" Grid.Row="2"
                                    ItemsSource="{TemplateBinding NormalViews}"
                                    SelectedIndex="{Binding SelectedNormalView, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                    Style="{DynamicResource CODE.Framework.Wpf.Mvvm.Shell-NormalViewsHost}"
                                    />
                        <Grid VerticalAlignment="Bottom" Height="Auto" Grid.Row="3">
                            <Rectangle VerticalAlignment="Top" Height="2" Fill="WhiteSmoke" />
                            <ContentControl Content="{TemplateBinding CurrentStatusView}" Margin="5,4,5,0" MinHeight="23"
                                FontFamily="{DynamicResource DefaultFont}" FontSize="{DynamicResource FontSize-Normal}" />
                        </Grid>
                        <Grid x:Name="notificationsGrid" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="10" Width="385" Grid.RowSpan="4">
                            <Grid.Effect>
                                <DropShadowEffect Color="Silver" Opacity=".5" />
                            </Grid.Effect>
                            <Border Background="#eeeeee" BorderBrush="#939393" BorderThickness="1" />
                            <Border BorderThickness="1,1,0,0" BorderBrush="DarkGray" Margin="6" />
                            <Border BorderThickness="0,0,1,1" BorderBrush="WhiteSmoke" Margin="6" />
                            <ItemsControl ItemsSource="{TemplateBinding CurrentNotifications}" 
                                          ItemTemplate="{DynamicResource NotificationItemTemplate}" 
                                          Margin="12"
                                          />
                        </Grid>
                    </Grid>
                	<ControlTemplate.Triggers>
                		<Trigger Property="CurrentNotificationsCount" Value="0">
                			<Setter Property="Visibility" TargetName="notificationsGrid" Value="Collapsed"/>
                		</Trigger>
                	</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TabControl" x:Key="CODE.Framework.Wpf.Mvvm.Shell-NormalViewsHost" >
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <AdornerDecorator>
                            <ContentControl Content="{Binding View}" />
                        </AdornerDecorator>
                        <mvvm:ModelStatusGrid Model="{Binding Model}" VerticalAlignment="Top" HorizontalAlignment="Stretch" Height="8" x:Name="modelStatus">
                            <mvvm:ModelStatusGrid.Resources>
                                <mvvm:ModelStatusToVisibleConverter x:Key="ModelStatusToVisibleConverter" />
                            </mvvm:ModelStatusGrid.Resources>
                            <ProgressBar Visibility="{Binding Path=ModelStatus, ElementName=modelStatus, Converter={StaticResource ModelStatusToVisibleConverter}}" IsIndeterminate="True" Height="4"/>
                        </mvvm:ModelStatusGrid>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource CODE.Framework.Wpf.Mvvm.Shell-ViewHost}"/>
    </Style>

    <Style TargetType="TabItem" x:Key="CODE.Framework.Wpf.Mvvm.Shell-ViewHost">
        <Setter Property="Header" Value="{Binding ViewTitle}" />
        <Setter Property="Padding" Value="10,5,15,5" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize-Normal}" />
    </Style>

    <Style TargetType="TextBlock" x:Key="CODE.Framework.Wpf.Mvvm.Shell-MessageBox-Text">
        <Setter Property="Foreground" Value="{DynamicResource CODE.Framework-Application-ForegroundBrush1}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize-Normal}" />
        <Setter Property="Margin" Value="15,10,20,10" />
        <Setter Property="MinWidth" Value="200" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="Rectangle" x:Key="CODE.Framework.Wpf.Mvvm.Shell-MessageBox-Image">
        <Setter Property="Margin" Value="20,15,10,10" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Height" Value="48" />
        <Setter Property="Width" Value="48" />
    </Style>

    <DataTemplate x:Key="NotificationItemTemplate">
        <ContentControl Content="{Binding View}" Foreground="{DynamicResource CODE.Framework-Metro-NotificationForegroundBrush}"
                        Margin="5,10" VerticalAlignment="Top" HorizontalAlignment="Stretch"/>
    </DataTemplate>
    
    <Style TargetType="mvvm:ViewActionToolbar">
        <Setter Property="Margin" Value="5,2,5,4" />
    </Style>

    <Style TargetType="mvvm:ViewActionToolbarButton">
        <Setter Property="MinHeight" Value="27" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="mvvm:ViewActionToolbarButton">
                    <Grid controls1:GridEx.ColumnWidths="Auto,Auto">
                        <Border x:Name="highlight" Background="{DynamicResource CODE.Framework-Application-ToolbarButtonHighlightBrush2}" BorderBrush="{DynamicResource CODE.Framework-Application-ToolbarButtonHighlightBrush1}" BorderThickness="1" Visibility="Hidden" Opacity=".5" Grid.ColumnSpan="2" />
                        <mvvm:ThemeIcon IconResourceKey="{Binding Action.BrushResourceKey, RelativeSource={RelativeSource TemplatedParent}}" Height="23" Width="23" x:Name="icon" Margin="2" />
                        <TextBlock Text="{TemplateBinding Title}" FontFamily="{DynamicResource DefaultFont}" FontSize="{DynamicResource FontSize-Normal}" Grid.Column="1" VerticalAlignment="Center" Margin="4,2" x:Name="title" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasIcon" Value="False">
                            <Setter TargetName="icon" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="title" Property="Margin" Value="6,2" />
                        </Trigger>
                        <Trigger Property="HasTitle" Value="False">
                            <Setter TargetName="title" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="highlight" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="mvvm:ViewActionToolbarSeparator">
        <Setter Property="Width" Value="7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border Width="2" BorderBrush="Black" Opacity=".25" BorderThickness="1,0,0,0" Margin="2,2,3,2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="{x:Type Button}" x:Key="Metro-Control-Button">
        <Setter Property="BorderBrush" Value="{DynamicResource CODE.Framework-Application-ForegroundBrush1}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="{DynamicResource CODE.Framework-Application-ForegroundBrush1}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize-Normal}"/>
        <Setter Property="Template" Value="{DynamicResource Metro-Button-Template}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
        <Setter Property="MinHeight" Value="27" />
        <Setter Property="Padding" Value="8,0" />
    </Style>

    <ControlTemplate TargetType="{x:Type ButtonBase}" x:Key="Metro-Button-Template">
        <Grid>
            <Border x:Name="Chrome" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <Border x:Name="Chrome2" BorderThickness="2" BorderBrush="Transparent" Background="Transparent" SnapsToDevicePixels="True">
                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Border>
            <Rectangle x:Name="rectangle" Fill="{TemplateBinding BorderBrush}" Opacity="0" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" TargetName="rectangle" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#FFADADAD"/>
            </Trigger>
            <Trigger Property="IsMouseCaptureWithin" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource CODE.Framework-Application-ForegroundBrush1}" TargetName="Chrome2"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource CODE.Framework-Application-ForegroundBrush1}" TargetName="Chrome2"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource CODE.Framework-Application-ForegroundBrush1}" TargetName="Chrome2"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource Metro-Control-Button}" />
    
    <Style TargetType="Button" x:Key="Metro-Control-TileButton">
        <Setter Property="Foreground" Value="{DynamicResource CODE.Framework-Application-ForegroundBrush1}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                	<ControlTemplate.Resources>
                		<Storyboard x:Key="Pressed">
                			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="contentPresenter">
                				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
                				<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                			</DoubleAnimationUsingKeyFrames>
                			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="contentPresenter">
                				<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
                				<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                			</DoubleAnimationUsingKeyFrames>
                		</Storyboard>
                	</ControlTemplate.Resources>
                    <Grid Background="{DynamicResource CODE.Framework-Application-ThemeBrush1}">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                          HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RenderTransformOrigin="0.5,0.5" 
                                          >
                        	<ContentPresenter.RenderTransform>
                        		<TransformGroup>
                        			<ScaleTransform/>
                        			<SkewTransform/>
                        			<RotateTransform/>
                        			<TranslateTransform/>
                        		</TransformGroup>
                        	</ContentPresenter.RenderTransform>
                        </ContentPresenter>
                        <Rectangle Stroke="Black" StrokeThickness="3" Fill="{x:Null}" Visibility="Hidden" Opacity=".5" x:Name="ButtonOutline" />
                    </Grid>
                	<ControlTemplate.Triggers>
                		<EventTrigger RoutedEvent="UIElement.MouseLeftButtonUp">
                			<BeginStoryboard Storyboard="{StaticResource Pressed}"/>
                		</EventTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="ButtonOutline" />
                        </Trigger>
                	</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>
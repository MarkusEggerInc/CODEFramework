<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mvvm="clr-namespace:CODE.Framework.Wpf.Mvvm;assembly=CODE.Framework.Wpf.Mvvm"
                    xmlns:mc="clr-namespace:CODE.Framework.Wpf.Theme.Metro.Controls"
                    xmlns:c="clr-namespace:CODE.Framework.Wpf.Controls;assembly=CODE.Framework.Wpf"
                    xmlns:classes="clr-namespace:CODE.Framework.Wpf.Theme.Metro.Classes">

    <Style TargetType="{x:Type mvvm:Shell}" x:Key="CODE.Framework.Wpf.Mvvm.Shell-Style">
        <Setter Property="Background" Value="Black" />
        <Setter Property="TopLevelViewLaunchMode" Value="InPlace" />
        <Setter Property="c:WindowEx.IsBorderless" Value="False" />
        <Setter Property="Template" Value="{DynamicResource CODE.Framework.Wpf.Mvvm.Shell-Template}" />
    </Style>

    <ControlTemplate TargetType="{x:Type mvvm:Shell}" x:Key="CODE.Framework.Wpf.Mvvm.Shell-Template">
    	<ControlTemplate.Resources>
    		<Storyboard x:Key="ApplicationStatusChanged">
    			<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="statusGrid">
    				<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    				<DiscreteObjectKeyFrame KeyTime="0:0:11" Value="{x:Static Visibility.Visible}"/>
    				<DiscreteObjectKeyFrame KeyTime="0:0:11.1" Value="{x:Static Visibility.Collapsed}"/>
    			</ObjectAnimationUsingKeyFrames>
    			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="statusGrid">
    				<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
    				<EasingDoubleKeyFrame KeyTime="0:0:10" Value="1"/>
    				<EasingDoubleKeyFrame KeyTime="0:0:11" Value="0"/>
    			</DoubleAnimationUsingKeyFrames>
    		</Storyboard>
    	</ControlTemplate.Resources>
        <Grid c:GridEx.RowHeights="*,Auto">
            <Grid.Background>
                <ImageBrush ImageSource="/Images/ShellBackground.jpg" Stretch="Fill" />
            </Grid.Background>
            <Image Source="/Images/ShellLogo.png" Stretch="None" VerticalAlignment="Top" HorizontalAlignment="Right" Margin="20" />
            <mc:ShellTabControl HomeTitle="Start"
                                ItemsSource="{TemplateBinding NormalViews}"
                                SelectedIndex="{Binding SelectedNormalView, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                Style="{DynamicResource CODE.Framework.Wpf.Mvvm.Shell-NormalViewsHost}"
                                HomePageVisible="true"
                                x:Name="normalViewHost">
                <mc:ShellTabControl.HomePage>
                    <ScrollViewer Margin="0,50,0,0" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <mc:ShellMetroTiles VerticalAlignment="Stretch" HorizontalAlignment="Left" />
                    </ScrollViewer>
                </mc:ShellTabControl.HomePage>
            </mc:ShellTabControl>
            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
            <mvvm:TopLevelViewHostTabControl x:Name="tabControl" ItemsSource="{TemplateBinding TopLevelViews}" 
                                             SelectedIndex="{TemplateBinding SelectedTopLevelView}" 
                                             Style="{DynamicResource CODE.Framework.Wpf.Mvvm.Shell-TopLevelViewsHost}" 
                                             NormalViewHost="{Binding ElementName=normalViewHost}"/>
            <Grid VerticalAlignment="Bottom" Height="Auto" Grid.Row="1"
			      Background="{DynamicResource CODE.Framework-Metro-StatusReadyBackgroundBrush}" 
				  Visibility="Collapsed" x:Name="statusGrid" Opacity="0">
                <ContentControl Content="{TemplateBinding CurrentStatusView}" Margin="5,2,5,3" x:Name="statusContent"
                                FontFamily="{DynamicResource DefaultFont}" FontSize="{DynamicResource FontSize-Large}" FontWeight="Light" 
                                Foreground="{DynamicResource CODE.Framework-Metro-StatusReadyForegroundBrush}"/>
            </Grid>
            <ItemsControl VerticalAlignment="Top" HorizontalAlignment="Right" Margin="10" Width="310" HorizontalContentAlignment="Right"
                          ItemsSource="{TemplateBinding CurrentNotifications}" ItemTemplate="{DynamicResource NotificationItemTemplate}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TopLevelViewCount" Value="0">
                <Setter Property="Visibility" TargetName="tabControl" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="CurrentApplicationStatus" Value="Processing">
                <Setter Property="Background" TargetName="statusGrid" Value="{DynamicResource CODE.Framework-Metro-StatusProcessingBackgroundBrush}"/>
                <Setter Property="Foreground" TargetName="statusContent" Value="{DynamicResource CODE.Framework-Metro-StatusProcessingForegroundBrush}"/>
            </Trigger>
            <Trigger Property="CurrentApplicationStatus" Value="Warning">
                <Setter Property="Background" TargetName="statusGrid" Value="{DynamicResource CODE.Framework-Metro-StatusWarningBackgroundBrush}"/>
                <Setter Property="Foreground" TargetName="statusContent" Value="{DynamicResource CODE.Framework-Metro-StatusWarningForegroundBrush}"/>
            </Trigger>
            <Trigger Property="CurrentApplicationStatus" Value="Error">
                <Setter Property="Background" TargetName="statusGrid" Value="{DynamicResource CODE.Framework-Metro-StatusErrorBackgroundBrush}"/>
                <Setter Property="Foreground" TargetName="statusContent" Value="{DynamicResource CODE.Framework-Metro-StatusErrorForegroundBrush}"/>
            </Trigger>
            <EventTrigger RoutedEvent="mvvm:Shell.StatusChanged">
            	<BeginStoryboard x:Name="ApplicationStatusChanged_BeginStoryboard" Storyboard="{StaticResource ApplicationStatusChanged}"/>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style TargetType="mc:ShellTabControl" x:Key="CODE.Framework.Wpf.Mvvm.Shell-NormalViewsHost" >
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid c:GridEx.RowHeights="*,Auto">
                        <AdornerDecorator>
                            <mc:SizeAwareContentControl Content="{Binding View}" MaximumMargin="116,20,20,0" MinimumMargin="20,20,20,0" MinimumDesiredControlSize="900,600" />
                        </AdornerDecorator>
                        <mvvm:ModelStatusGrid Model="{Binding Model}" VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="modelStatus">
                            <mvvm:ModelStatusGrid.Resources>
                                <mvvm:ModelStatusToVisibleConverter x:Key="ModelStatusToVisibleConverter" />
                            </mvvm:ModelStatusGrid.Resources>
                            <mc:ProgressRing IsActive="True" Height="50" Width="50" 
                                             Visibility="{Binding Path=ModelStatus, ElementName=modelStatus, Converter={StaticResource ModelStatusToVisibleConverter}}" />
                        </mvvm:ModelStatusGrid>
                        <mvvm:ActionGrid Grid.Row="1" Model="{Binding Model}">
                            <mvvm:ActionItemsControl Model="{Binding Model}" HorizontalAlignment="Right" Margin="10,5,10,0" IsTabStop="false">
                                <mvvm:ActionItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <DataTemplate.Resources>
                                            <SolidColorBrush Color="{DynamicResource CODE.Framework-Application-ThemeColor1}" Opacity=".66" x:Key="ButtonBackgroundBrush" />
                                        </DataTemplate.Resources>
                                        <Button x:Name="toolbarButton"
                                                Style="{DynamicResource Metro-Control-AppBarButtonStyle}"
                                                Content="{Binding Caption}" Command="{Binding}" 
                                                IsDefault="{Binding IsDefault, Mode=OneWay}" IsCancel="{Binding IsCancel, Mode=OneWay}">
                                            <Button.Resources>
                                                <SolidColorBrush x:Key="CODE.Framework-Metro-IconForegroundBrush" Color="{DynamicResource CODE.Framework-Application-ThemeColor1}" />
                                            </Button.Resources>
                                        </Button>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding BeginGroup}" Value="True">
                                                <Setter Property="Margin" Value="20,0,0,0" TargetName="toolbarButton" />
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </mvvm:ActionItemsControl.ItemTemplate>
                                <mvvm:ActionItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </mvvm:ActionItemsControl.ItemsPanel>
                            </mvvm:ActionItemsControl>
                        </mvvm:ActionGrid>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource CODE.Framework.Wpf.Mvvm.Shell-ViewHost}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type mc:ShellTabControl}">
                	<ControlTemplate.Resources>
                        <Storyboard x:Key="ShowHomepage">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ContentPanel">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="200"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentPanel">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentPanel">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.4" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentControl">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="contentControl">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="contentControl">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HideHomepage">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ContentPanel">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentPanel">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentPanel">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="contentControl">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="contentControl">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentControl">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Collapsed}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SwitchPage">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="ContentPanel">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="200"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ContentPanel">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ContentPanel">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40" /> <!-- Spacer from the left for the Start item -->
                                <ColumnDefinition Width="Auto" /> <!-- Column for the additional 'start' item in this tab -->
                                <ColumnDefinition Width="*" /> <!-- Space for regular tabs -->
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="HomePanel" Grid.Column="1">
                                <Rectangle x:Name="rectangle" Fill="{DynamicResource CODE.Framework-Application-HighlightBrush1}" Opacity="0.5" Visibility="Collapsed" />
                                <Border x:Name="Bd" BorderThickness="2" VerticalAlignment="Bottom" Height="4" BorderBrush="{DynamicResource CODE.Framework-Application-ThemeBrush1}" CornerRadius="2" Visibility="Visible"/>
                                <Label Content="{TemplateBinding HomeTitle}" FontSize="{DynamicResource FontSize-Larger}" FontWeight="Light" x:Name="Content" Margin="0,30,0,10" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="{DynamicResource CODE.Framework-Application-ShellHeaderBrush}"/>
                            </Grid>
                            <ScrollViewer Grid.Column="2" Panel.ZIndex="1" Style="{DynamicResource ViewHostTabItemHeaderScroll}" Margin="0,0,200,0" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Hidden">
                                <StackPanel Orientation="Horizontal" x:Name="HeaderPanel" IsItemsHost="True" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
                            </ScrollViewer>
                        </Grid>
						<ContentControl x:Name="contentControl" Content="{TemplateBinding HomePage}" 
                                        HorizontalAlignment="Left" 
                                        Visibility="Collapsed" Grid.Row="1" 
                                        RenderTransformOrigin="0.5,0.5" >
							<ContentControl.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</ContentControl.RenderTransform>
						</ContentControl>
                        <Border x:Name="ContentPanel" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                KeyboardNavigation.DirectionalNavigation="Contained" 
                                KeyboardNavigation.TabIndex="2" 
                                KeyboardNavigation.TabNavigation="Local"
                                Grid.Row="1" RenderTransformOrigin="0.5,0.5" 
                                >
                        	<Border.RenderTransform>
                        		<TransformGroup>
                        			<ScaleTransform/>
                        			<SkewTransform/>
                        			<RotateTransform/>
                        			<TranslateTransform/>
                        		</TransformGroup>
                        	</Border.RenderTransform>
                            <ContentPresenter x:Name="PART_SelectedContentHost" 
                                              ContentTemplate="{TemplateBinding SelectedContentTemplate}" 
                                              Content="{TemplateBinding SelectedContent}" 
                                              ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" 
                                              ContentSource="SelectedContent" 
                                              Margin="{TemplateBinding Padding}" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="HomePanel">
                            <Setter Property="Visibility" TargetName="rectangle" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="HomePageVisible" Value="False">
                            <Setter Property="Visibility" TargetName="Bd" Value="Hidden"/>
                            <!--<Setter Property="Foreground" TargetName="Content" Value="{DynamicResource CODE.Framework-Application-ForegroundBrush2}" />-->
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="ShowHomepage_BeginStoryboard" Storyboard="{StaticResource ShowHomepage}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="HideHomepage_BeginStoryboard" Storyboard="{StaticResource HideHomepage}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <EventTrigger RoutedEvent="PageSwitched" >
                            <BeginStoryboard Storyboard="{StaticResource SwitchPage}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ScrollViewer" x:Key="ViewHostTabItemHeaderScroll">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <ControlTemplate.Resources>
                        <classes:HorizontalScrollEnabledToVisibilityConverter x:Key="HorizontalScrollEnabledToVisibilityConverter" />
                    </ControlTemplate.Resources>
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <RepeatButton Command="ScrollBar.LineLeftCommand" Margin="20,0">
                            <RepeatButton.Visibility>
                                <MultiBinding Converter="{StaticResource HorizontalScrollEnabledToVisibilityConverter}">
                                    <Binding Path="ViewportWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <RepeatButton.Content>
                                <Rectangle Margin="0,20,0,0" Height="30" Width="30" Fill="{DynamicResource Metro-Icon-Arrow}" />
                            </RepeatButton.Content>
                            <RepeatButton.Template>
                                <ControlTemplate TargetType="RepeatButton">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </ControlTemplate>
                            </RepeatButton.Template>
                        </RepeatButton>
                        <ScrollContentPresenter Grid.Column="1" x:Name="PART_ScrollContentPresenter" SnapsToDevicePixels="True" Content="{TemplateBinding ScrollViewer.Content}" />
                        <RepeatButton Command="ScrollBar.LineRightCommand" Grid.Column="2" Margin="20,0" >
                            <RepeatButton.Visibility>
                                <MultiBinding Converter="{StaticResource HorizontalScrollEnabledToVisibilityConverter}">
                                    <Binding Path="ViewportWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ExtentWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <RepeatButton.Content>
                                <Rectangle  Margin="0,20,0,0" Height="30" Width="30" Fill="{DynamicResource Metro-Icon-Arrow}" RenderTransformOrigin=".5,.5">
                                    <Rectangle.RenderTransform>
                                        <RotateTransform Angle="180" />
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </RepeatButton.Content>
                            <RepeatButton.Template>
                                <ControlTemplate TargetType="RepeatButton">
                                    <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                                </ControlTemplate>
                            </RepeatButton.Template>
                        </RepeatButton>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type TabItem}" x:Key="CODE.Framework.Wpf.Mvvm.Shell-ViewHost">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="grid" SnapsToDevicePixels="True" Margin="20,0,20,0">
                        <Rectangle x:Name="rectangle" Fill="{DynamicResource CODE.Framework-Application-HighlightBrush1}" Opacity="0.5" Visibility="Collapsed" />
                        <Border x:Name="Bd" BorderThickness="2" VerticalAlignment="Bottom" Height="4" BorderBrush="{DynamicResource CODE.Framework-Application-ThemeBrush1}" CornerRadius="2" Visibility="Hidden"/>
                        <Label Content="{Binding ViewTitle}" FontSize="{DynamicResource FontSize-Larger}" FontWeight="Light" x:Name="Content" Margin="0,30,0,10" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="{DynamicResource CODE.Framework-Application-ShellHeaderBrush}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" TargetName="rectangle" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Visibility" TargetName="Bd" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="mvvm:TopLevelViewHostTabControl" x:Key="CODE.Framework.Wpf.Mvvm.Shell-TopLevelViewsHost">
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="False" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Rectangle Fill="White" Opacity=".6" Margin="-10,-5000" />
                        <Grid ClipToBounds="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel Height="0" x:Name="HeaderPanel" IsItemsHost="True" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" Margin="0,-20,0,0"/>
                            <Border x:Name="ContentPanel" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    KeyboardNavigation.DirectionalNavigation="Contained" 
                                    Background="{x:Null}"
                                    KeyboardNavigation.TabIndex="2" 
                                    KeyboardNavigation.TabNavigation="Local"
                                    Grid.Row="1" >
                                <ContentPresenter x:Name="PART_SelectedContentHost" 
                                                  ContentTemplate="{TemplateBinding SelectedContentTemplate}" 
                                                  Content="{TemplateBinding SelectedContent}" 
                                                  ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" 
                                                  ContentSource="SelectedContent" 
                                                  Margin="{TemplateBinding Padding}" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <mvvm:SizeStrategyAwareGrid HorizontalAlignment="Center" VerticalAlignment="Center" ClipToBounds="False"
                                                Margin="20,40,20,30" 
                                                x:Name="SizeHost">
                        <mvvm:SizeStrategyAwareGrid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" x:Name="SizeHostContentRow" />
                            <RowDefinition Height="Auto" />
                        </mvvm:SizeStrategyAwareGrid.RowDefinitions>
                        <Rectangle Grid.RowSpan="3" Fill="{DynamicResource CODE.Framework-Application-ThemeBrush1}" Opacity=".95" Margin="-50000,-10,-50000,-10" />
                        <mvvm:ViewResultHeaderGrid x:Name="headerGrid" ViewResult="{Binding}" Margin="0,20,0,0">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="-100,0,-100,15">
                                <Rectangle Height="48" Width="48" Fill="{Binding Path=TitleIconBrush, ElementName=headerGrid}" />
                                <Label Foreground="{DynamicResource CODE.Framework-Application-ForegroundBrush1}" 
                                       Content="{Binding Path=ViewTitle, ElementName=headerGrid}" 
                                       FontSize="{DynamicResource FontSize-Larger}" FontWeight="Light"
                                       VerticalAlignment="Center" />
                            </StackPanel>
                        </mvvm:ViewResultHeaderGrid>
                        <AdornerDecorator Grid.Row="1" x:Name="MainContentArea">
                            <mvvm:ViewContentControl ViewContent="{Binding View}" SizeStrategyHost="{Binding ElementName=SizeHost}" x:Name="MainContentView" />
                        </AdornerDecorator>
                        <mvvm:ActionGrid Grid.Row="2" Model="{Binding Model}" Margin="0,20,0,0" HorizontalAlignment="Center" MinWidth="{Binding ElementName=MainContentView, Path=ViewContent.ActualWidth}">
                            <ItemsControl ItemsSource="{Binding Model.Actions}" HorizontalAlignment="Right" Focusable="False">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button Template="{DynamicResource Metro-Button-Template}" Padding="10,2" 
                                                FontSize="{DynamicResource FontSize-Normal}" BorderBrush="White" Background="{x:Null}" Foreground="White" 
                                                Content="{Binding Caption}" Command="{Binding}" 
                                                IsDefault="{Binding IsDefault, Mode=OneWay}" IsCancel="{Binding IsCancel, Mode=OneWay}"
                                                Margin="5,0,0,0" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate> 
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </mvvm:ActionGrid>
                    </mvvm:SizeStrategyAwareGrid>
                	<DataTemplate.Triggers>
                		<Trigger Property="SizeStrategy" Value="UseMaximumSizeAvailable" SourceName="SizeHost">
                            <Setter Property="VerticalAlignment" TargetName="SizeHost" Value="Stretch"/>
                            <Setter Property="HorizontalAlignment" TargetName="SizeHost" Value="Stretch"/>
                            <Setter Property="Height" TargetName="SizeHostContentRow" Value="*"/>
                        </Trigger>
                	</DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="CODE.Framework.Wpf.Mvvm.Shell-MessageBox-Text">
        <Setter Property="Foreground" Value="{DynamicResource CODE.Framework-Application-ForegroundBrush1}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize-Large}" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Margin" Value="50,10,50,50" />
        <Setter Property="MinWidth" Value="250" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="TextAlignment" Value="Center" />
    </Style>

    <Style TargetType="Rectangle" x:Key="CODE.Framework.Wpf.Mvvm.Shell-MessageBox-Image">
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>

    <DataTemplate x:Key="NotificationItemTemplate">
        <DataTemplate.Resources>
            <SolidColorBrush x:Key="CODE.Framework-Application-StandardViewModelForegroundBrush" Color="{DynamicResource CODE.Framework-Metro-NotificationForegroundColor}" />
            <SolidColorBrush x:Key="CODE.Framework-Application-StandardViewModelBackgroundBrush" Color="{DynamicResource CODE.Framework-Metro-NotificationBackgroundColor}" />
        </DataTemplate.Resources>
        <c:GridEx Margin="0,0,0,5" VerticalAlignment="Top" HorizontalAlignment="Right">
            <ContentControl HorizontalContentAlignment="Right" Content="{Binding View}" Foreground="{DynamicResource CODE.Framework-Metro-NotificationForegroundBrush}" />
        </c:GridEx>
    </DataTemplate>

</ResourceDictionary>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:bindingConverters="clr-namespace:CODE.Framework.Wpf.BindingConverters;assembly=CODE.Framework.Wpf"
					xmlns:mvvm="clr-namespace:CODE.Framework.Wpf.Mvvm;assembly=CODE.Framework.Wpf.Mvvm">

    <Style TargetType="{x:Type Button}" x:Key="Vapor-Control-Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="BorderBrush" Value="{DynamicResource CODE.Framework-Application-ForegroundBrush1}"/>
        <Setter Property="Background" Value="{DynamicResource CODE.Framework-Application-BackgroundBrush1}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource CODE.Framework-Application-ForegroundBrush1}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize-Normal}"/>
        <Setter Property="Template" Value="{DynamicResource Vapor-Button-Template}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
        <Setter Property="MinWidth" Value="90" />
        <Setter Property="Padding" Value="10,2,25,4" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    </Style>

    <ControlTemplate TargetType="{x:Type ButtonBase}" x:Key="Vapor-Button-Template">
        <ControlTemplate.Resources>
            <bindingConverters:LitBrushConverter x:Key="LitBrushConverter" />
            <bindingConverters:TransparentBrushConverter x:Key="TransparentBrushConverter" />
        </ControlTemplate.Resources>
        <Grid>
            <Border x:Name="Chrome" CornerRadius="3" BorderThickness="1" SnapsToDevicePixels="True" 
					BorderBrush="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LitBrushConverter}, ConverterParameter=.66}"
					Background="{Binding Background, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LitBrushConverter}, ConverterParameter=1.3}">
                <Grid>
                    <Rectangle x:Name="rectangle" RadiusX="3" RadiusY="3" Opacity=".15" >
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="White" Offset="0"/>
                                <GradientStop Offset="1"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" Visibility="Collapsed" x:Name="VisualRectangle"/>
                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" TargetName="rectangle" Value="0.4"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#FFADADAD"/>
            </Trigger>
            <Trigger Property="IsMouseCaptureWithin" Value="True">
                <Setter Property="Visibility" Value="Visible" TargetName="VisualRectangle"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Visibility" Value="Visible" TargetName="VisualRectangle"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Visibility" Value="Visible" TargetName="VisualRectangle"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource Vapor-Control-Button}" />
    <Style TargetType="{x:Type mvvm:ViewActionMenuButton}" BasedOn="{StaticResource Vapor-Control-Button}" />

</ResourceDictionary>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mvvm="clr-namespace:CODE.Framework.Wpf.Mvvm;assembly=CODE.Framework.Wpf.Mvvm"
                    xmlns:controls="clr-namespace:CODE.Framework.Wpf.Controls;assembly=CODE.Framework.Wpf"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    mc:Ignorable="d">

    <Style TargetType="Window" x:Key="CODE.Framework.Wpf.Mvvm.Shell-TopLevelMessageBoxWindowStyle">
        <Setter Property="Background" Value="{DynamicResource CODE.Framework-Application-BackgroundBrush2}" />
        <Setter Property="Foreground" Value="{DynamicResource CODE.Framework-Application-ForegroundBrush1}" />
        <Setter Property="ShowInTaskbar" Value="True" />
        <Setter Property="SizeToContent"  Value="WidthAndHeight" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="controls:WindowEx.IsBorderless" Value="True" />
        <Setter Property="controls:WindowEx.AutoWindowDragEnabled" Value="True" />
        <Setter Property="controls:WindowEx.HeaderHeight" Value="25"/>
        <Setter Property="controls:WindowEx.WindowStartupLocationStylable" Value="CenterOwner"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Grid Background="{TemplateBinding Background}" Margin="-5" MaxWidth="1000" MaxHeight="700">
                        <Border Background="{x:Null}" BorderThickness="1" Margin="5">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" >
                                    <GradientStop Color="{DynamicResource CODE.Framework-Application-BackgroundColor1}" Offset=".75"/>
                                    <GradientStop Color="{DynamicResource CODE.Framework-Application-ThemeColor3}" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Grid controls:GridEx.RowHeights="Auto,Auto,Auto">
                                <Label FontFamily="{DynamicResource DefaultFont}" 
                                       FontSize="{DynamicResource FontSize-Normal}"
                                       Foreground="{DynamicResource CODE.Framework-Application-ForegroundBrush2}"
                                       Content="{TemplateBinding Title}"
                                       HorizontalAlignment="Left"
                                       Margin="5,2"/>
                                <ContentPresenter Grid.Row="1" Margin="10,5" />
                                <mvvm:ActionGrid Grid.Row="2" Model="{Binding}" Margin="10">
                                    <ItemsControl ItemsSource="{Binding Actions}" HorizontalAlignment="Right" Focusable="False">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Button FontSize="{DynamicResource FontSize-Normal}" 
                                                        Content="{Binding Caption}" Command="{Binding}" 
                                                        IsDefault="{Binding IsDefault, Mode=OneWay}" IsCancel="{Binding IsCancel, Mode=OneWay}"
                                                        Margin="5,0,0,0" Padding="7,3" MinWidth="75" />
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </mvvm:ActionGrid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="CODE.Framework.Wpf.Mvvm.Shell-MessageBox-Text">
        <Setter Property="Foreground" Value="{DynamicResource CODE.Framework-Application-ForegroundBrush1}" />
        <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize-Normal}" />
        <Setter Property="Margin" Value="15,10,20,10" />
        <Setter Property="MinWidth" Value="200" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="Rectangle" x:Key="CODE.Framework.Wpf.Mvvm.Shell-MessageBox-Image">
        <Setter Property="Margin" Value="20,15,10,10" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Height" Value="48" />
        <Setter Property="Width" Value="48" />
    </Style>

    <Style TargetType="Window" x:Key="CODE.Framework.Wpf.Mvvm.Shell-TopLevelWindowStyle">
        <Setter Property="Background" Value="{DynamicResource CODE.Framework-Application-BackgroundBrush1}" />
        <Setter Property="ShowInTaskbar" Value="True" />
        <Setter Property="controls:WindowEx.IsBorderless" Value="True" />
        <Setter Property="controls:WindowEx.AutoWindowDragEnabled" Value="True" />
        <Setter Property="controls:WindowEx.AutoWindowMaximizeEnabled" Value="True" />
        <Setter Property="controls:WindowEx.AutoWindowResizingEnabled" Value="True"/>
        <Setter Property="controls:WindowEx.HeaderHeight" Value="25"/>
        <Setter Property="mvvm:Closable.RaiseClosingEvents" Value="True" />
        <Setter Property="controls:WindowEx.WindowStartupLocationStylable" Value="CenterScreen"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid controls:GridEx.RowHeights="Auto,*,Auto">
                        <Border Grid.RowSpan="3" BorderThickness="1">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,1" >
                                    <GradientStop Color="Black" Offset=".75"/>
                                    <GradientStop Color="{DynamicResource CODE.Framework-Application-ThemeColor3}" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1" >
                                    <GradientStop Color="{DynamicResource CODE.Framework-Application-BackgroundColor2}" Offset=".2"/>
                                    <GradientStop Color="{DynamicResource CODE.Framework-Application-BackgroundColor1}" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Grid controls:GridEx.ColumnWidths="*,Auto">
                            <Label FontFamily="{DynamicResource DefaultFont}" 
                                   FontSize="{DynamicResource FontSize-Normal}"
                                   Foreground="{DynamicResource CODE.Framework-Application-ForegroundBrush1}"
                                   Content="{TemplateBinding Title}"
                                   HorizontalAlignment="Left"
                                   Margin="5,2"/>
                        </Grid>
                        <AdornerDecorator Grid.Row="1">
                            <Border Padding="15" Margin="8,10,8,12" Background="{DynamicResource CODE.Framework-Application-BackgroundBrush2}">
                                <ContentPresenter />
                            </Border>
                        </AdornerDecorator>
                        <mvvm:ModelStatusGrid Model="{Binding}" VerticalAlignment="Top" HorizontalAlignment="Stretch" Height="8" x:Name="modelStatus" Grid.Row="1">
                            <mvvm:ModelStatusGrid.Resources>
                                <mvvm:ModelStatusToVisibleConverter x:Key="ModelStatusToVisibleConverter" />
                            </mvvm:ModelStatusGrid.Resources>
                            <ProgressBar Visibility="{Binding Path=ModelStatus, ElementName=modelStatus, Converter={StaticResource ModelStatusToVisibleConverter}}" IsIndeterminate="True" Height="4"/>
                        </mvvm:ModelStatusGrid>
                        <mvvm:ActionGrid Grid.Row="2" Model="{Binding}" Margin="8,8,8,14">
                            <ItemsControl ItemsSource="{Binding Actions}" HorizontalAlignment="Right">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Button FontSize="{DynamicResource FontSize-Normal}" 
                                                Content="{Binding Caption}" Command="{Binding}" 
                                                IsDefault="{Binding IsDefault, Mode=OneWay}" IsCancel="{Binding IsCancel, Mode=OneWay}"
                                                Margin="5,0,0,0" Padding="7,3" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </mvvm:ActionGrid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type mvvm:Shell}" x:Key="CODE.Framework.Wpf.Mvvm.Shell-Style">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="{DynamicResource CODE.Framework-Application-BackgroundColor3}" Offset="0"/>
                    <GradientStop Color="{DynamicResource CODE.Framework-Application-BackgroundColor1}" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="controls:WindowEx.IsBorderless" Value="True" />
        <Setter Property="controls:WindowEx.AutoWindowDragEnabled" Value="True" />
        <Setter Property="controls:WindowEx.AutoWindowMaximizeEnabled" Value="True" />
        <Setter Property="controls:WindowEx.AutoWindowResizingEnabled" Value="True"/>
        <Setter Property="controls:WindowEx.HeaderHeight" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type mvvm:Shell}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ApplicationStatusChanged">
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="statusGrid">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:11" Value="{x:Static Visibility.Visible}"/>
                                <DiscreteObjectKeyFrame KeyTime="0:0:11.1" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="statusGrid">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:10" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:11" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid controls:GridEx.RowHeights="Auto,Auto,*,Auto" Background="{TemplateBinding Background}">
                        <Rectangle VerticalAlignment="Top" Height="100" Grid.RowSpan="4" RenderTransformOrigin=".5,.5">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                            <Rectangle.OpacityMask>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#25000000"/>
                                    <GradientStop Offset="1"/>
                                </LinearGradientBrush>
                            </Rectangle.OpacityMask>
                            <Rectangle.Fill>
                                <DrawingBrush Stretch="None" TileMode="Tile" ViewportUnits="Absolute" Viewport="-1,-1,6,3.35">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M 2,0L -6.69435e-008,2.25287">
                                                <GeometryDrawing.Pen>
                                                    <Pen StartLineCap="Square" EndLineCap="Square" LineJoin="Round" Brush="White"/>
                                                </GeometryDrawing.Pen>
                                            </GeometryDrawing>
                                            <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M 5,-8.58307e-006L 1.816e-007,5.63217">
                                                <GeometryDrawing.Pen>
                                                    <Pen StartLineCap="Square" EndLineCap="Square" LineJoin="Round" Brush="White"/>
                                                </GeometryDrawing.Pen>
                                            </GeometryDrawing>
                                            <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M 8,-4.76837e-006L -5.85665e-007,9.01149">
                                                <GeometryDrawing.Pen>
                                                    <Pen StartLineCap="Square" EndLineCap="Square" LineJoin="Round" Brush="White"/>
                                                </GeometryDrawing.Pen>
                                            </GeometryDrawing>
                                            <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M 10,1.12644L 2.12245,10">
                                                <GeometryDrawing.Pen>
                                                    <Pen StartLineCap="Square" EndLineCap="Square" LineJoin="Round" Brush="White"/>
                                                </GeometryDrawing.Pen>
                                            </GeometryDrawing>
                                            <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M 10.019,4.48439L 5.12246,10">
                                                <GeometryDrawing.Pen>
                                                    <Pen StartLineCap="Square" EndLineCap="Square" LineJoin="Round" Brush="White"/>
                                                </GeometryDrawing.Pen>
                                            </GeometryDrawing>
                                            <GeometryDrawing Brush="#FFFFFFFF" Geometry="F1 M 10,7.87429L 8.11289,10">
                                                <GeometryDrawing.Pen>
                                                    <Pen StartLineCap="Square" EndLineCap="Square" LineJoin="Round" Brush="White"/>
                                                </GeometryDrawing.Pen>
                                            </GeometryDrawing>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Grid controls:GridEx.ColumnWidths="*,Auto,Auto">
                            <mvvm:ViewActionMenu Model="{Binding}" SelectedView="{Binding SelectedItem, ElementName=OpenViews, Mode=OneWay}" />
                            <TextBlock VerticalAlignment="Top" HorizontalAlignment="Center" TextAlignment="Center" 
                                       x:Name="windowTitle" Text="{TemplateBinding Title}" Grid.Column="1" Margin="5,8,20,5"
                                       FontFamily="{DynamicResource DefaultFont}" FontSize="{DynamicResource FontSize-Normal}"
                                       Foreground="{DynamicResource CODE.Framework-Application-ForegroundBrush1}"/>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Height="22" Margin="0,3,1,0" Grid.Column="2">
                                <controls:MinimizeButton/>
                                <controls:ToggleMaximizeButton/>
                                <controls:CloseButton/>
                            </StackPanel>
                        </Grid>
                        <ItemsControl VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="5,0" x:Name="notifications" Grid.Row="1"
                                      ItemsSource="{TemplateBinding CurrentNotifications}" 
                                      Background="{DynamicResource CODE.Framework-Application-ThemeBrush2}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ContentControl Content="{Binding View}" Margin="1" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <TabControl x:Name="OpenViews" Grid.Row="2"
                                    ItemsSource="{TemplateBinding NormalViews}"
                                    SelectedIndex="{Binding SelectedNormalView, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    Style="{DynamicResource CODE.Framework.Wpf.Mvvm.Shell-NormalViewsHost}" />
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Row="3" x:Name="statusGrid">
                            <ContentControl Content="{TemplateBinding CurrentStatusView}" x:Name="statusContent"
                                            FontFamily="{DynamicResource DefaultFont}" FontSize="{DynamicResource FontSize-Normal}"
                                            Foreground="{DynamicResource CODE.Framework-Vapor-StatusReadyForegroundBrush}"
                                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                            VerticalContentAlignment="Center" Margin="8,2,8,5"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="CurrentNotificationsCount" Value="0">
                            <Setter Property="Visibility" TargetName="notifications" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="CurrentApplicationStatus" Value="Processing">
                            <Setter Property="Foreground" TargetName="statusContent" Value="{DynamicResource CODE.Framework-Vapor-StatusProcessingForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="CurrentApplicationStatus" Value="Warning">
                            <Setter Property="Foreground" TargetName="statusContent" Value="{DynamicResource CODE.Framework-Vapor-StatusWarningForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="CurrentApplicationStatus" Value="Error">
                            <Setter Property="Foreground" TargetName="statusContent" Value="{DynamicResource CODE.Framework-Vapor-StatusErrorForegroundBrush}"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="mvvm:Shell.StatusChanged">
                            <BeginStoryboard x:Name="ApplicationStatusChanged_BeginStoryboard" Storyboard="{StaticResource ApplicationStatusChanged}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabControl}" x:Key="CODE.Framework.Wpf.Mvvm.Shell-NormalViewsHost" >
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid controls:GridEx.RowHeights="Auto,Auto,*">
                        <mvvm:ActionGrid Model="{Binding Model}">
                            <Border CornerRadius="3" Background="{DynamicResource CODE.Framework-Application-ToolbarBackgroundBrush}" BorderThickness="0" Margin="5,0,5,5">
                                <mvvm:ActionItemsControl Model="{Binding Model}" HorizontalAlignment="Right" Margin="4">
                                    <mvvm:ActionItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Button x:Name="ToolbarButton"
                                                    Content="{Binding Caption}" Command="{Binding}" 
                                                    IsDefault="{Binding IsDefault, Mode=OneWay}" IsCancel="{Binding IsCancel, Mode=OneWay}"
                                                    Margin="5,1,0,1" />
                                        </DataTemplate>
                                    </mvvm:ActionItemsControl.ItemTemplate>
                                    <mvvm:ActionItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal" />
                                        </ItemsPanelTemplate>
                                    </mvvm:ActionItemsControl.ItemsPanel>
                                </mvvm:ActionItemsControl>
                            </Border>
                        </mvvm:ActionGrid>
                        <AdornerDecorator Grid.Row="2">
                            <Border CornerRadius="3" Background="{DynamicResource CODE.Framework-Application-ViewBackgroundBrush}" BorderBrush="{DynamicResource CODE.Framework-Application-ViewBorderBrush}" BorderThickness="1" Margin="5,0,5,5" >
                                <ContentControl Content="{Binding View}" Margin="6" />
                            </Border>
                        </AdornerDecorator>
                        <mvvm:ModelStatusGrid Model="{Binding Model}" VerticalAlignment="Top" HorizontalAlignment="Stretch" Grid.Row="1"  x:Name="modelStatus">
                            <mvvm:ModelStatusGrid.Resources>
                                <mvvm:ModelStatusToVisibleConverter x:Key="ModelStatusToVisibleConverter" />
                            </mvvm:ModelStatusGrid.Resources>
                            <ProgressBar Visibility="{Binding Path=ModelStatus, ElementName=modelStatus, Converter={StaticResource ModelStatusToVisibleConverter}}" IsIndeterminate="True" Height="4" Margin="5,1,5,3"/>
                        </mvvm:ModelStatusGrid>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource CODE.Framework.Wpf.Mvvm.Shell-ViewHost}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="True" SnapsToDevicePixels="True" KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid>
                            <ScrollViewer Grid.Column="2" Panel.ZIndex="1" VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto">
                                <StackPanel Orientation="Horizontal" x:Name="HeaderPanel" IsItemsHost="True" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
                            </ScrollViewer>
                        </Grid>
                        <ContentPresenter x:Name="PART_SelectedContentHost" Grid.Row="1"
                                          ContentTemplate="{TemplateBinding SelectedContentTemplate}" 
                                          Content="{TemplateBinding SelectedContent}" 
                                          ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" 
                                          ContentSource="SelectedContent" 
                                          Margin="{TemplateBinding Padding}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TabItem" x:Key="CODE.Framework.Wpf.Mvvm.Shell-ViewHost">
        <Setter Property="Foreground" Value="{DynamicResource CODE.Framework-Application-SelectedNormalViewHeaderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="grid" SnapsToDevicePixels="True" Margin="8,0">
                        <Label Content="{Binding ViewTitle}" FontSize="{DynamicResource FontSize-Largest}" FontWeight="Light" x:Name="titleLabel" Margin="0,5"
                               HorizontalAlignment="Center" VerticalAlignment="Center" 
                               Foreground="{DynamicResource CODE.Framework-Application-UnselectedNormalViewHeaderBrush}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource CODE.Framework-Application-SelectedNormalViewHeaderBrush}" TargetName="titleLabel" />
                            <Setter Property="Effect" TargetName="titleLabel">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="5" Color="White" ShadowDepth="0"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource CODE.Framework-Application-SelectedNormalViewHeaderBrush}" TargetName="titleLabel" />
                            <Setter Property="Panel.ZIndex" Value="1"/>
                            <Setter Property="Effect" TargetName="titleLabel">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="20" Color="White" ShadowDepth="0"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:CloseButton">
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="1,0,5,0"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:CloseButton">
                    <Grid>
                        <Border Background="Transparent" IsHitTestVisible="True" />
                        <Border Width="12" Height="2" BorderThickness="1" RenderTransformOrigin=".5,.5" x:Name="bd2"
                                VerticalAlignment="Center" HorizontalAlignment="Center" Opacity=".6"
                                BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush1}">
                            <Border.RenderTransform>
                                <RotateTransform Angle="45" />
                            </Border.RenderTransform>
                        </Border>
                        <Border Width="12" Height="2" BorderThickness="1" RenderTransformOrigin=".5,.5" x:Name="bd1"
                                VerticalAlignment="Center" HorizontalAlignment="Center" Opacity=".6"
                                BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush1}">
                            <Border.RenderTransform>
                                <RotateTransform Angle="-45" />
                            </Border.RenderTransform>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" TargetName="bd1" />
                            <Setter Property="Opacity" Value="1" TargetName="bd2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:ToggleMaximizeButton">
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="1,0,0,0"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:ToggleMaximizeButton">
                    <Grid>
                        <Border Background="Transparent" IsHitTestVisible="True" />
                        <Border Width="10" Height="10" BorderThickness="1,3,1,1" x:Name="norm" Opacity=".6"
                                VerticalAlignment="Center" HorizontalAlignment="Center" Background="{x:Null}"
                                BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush1}" />
                        <Border Width="8" Height="8" BorderThickness="1,2,1,1" Margin="4,0,0,4" x:Name="max2"
                                VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed"
                                Background="{x:Null}" Opacity=".6"
                                BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush1}" />
                        <Border Width="8" Height="8" BorderThickness="1,2,1,1" Margin="0,2,2,0" x:Name="max1"
                                VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="Collapsed"
                                Background="{x:Null}" Opacity=".6"
                                BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush1}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" TargetName="norm" />
                            <Setter Property="Opacity" Value="1" TargetName="max1" />
                            <Setter Property="Opacity" Value="1" TargetName="max2" />
                        </Trigger>
                        <Trigger Property="IsMaximized" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="norm"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="max1"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="max2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:MinimizeButton">
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Margin" Value="1,0,0,0"/>
        <Setter Property="Cursor" Value="Arrow"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:MinimizeButton">
                    <Grid>
                        <Border Background="Transparent" IsHitTestVisible="True" />
                        <Border Width="10" Height="8" BorderThickness="0,0,0,2" Opacity=".6"
                                VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="bd"
                                BorderBrush="{DynamicResource CODE.Framework-Application-ForegroundBrush1}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="1" TargetName="bd" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>